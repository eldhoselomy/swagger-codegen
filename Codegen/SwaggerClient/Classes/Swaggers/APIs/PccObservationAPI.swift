//
// CooeyAPIClient
// PccObservationAPI.swift
//
// Generated by Eldhose Lomy
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class PccObservationAPI {
    /**

     - parameter patientId: (path)  
     - parameter tenantId: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getVitalBaselines(patientId: String, tenantId: String? = nil, completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        getVitalBaselinesWithRequestBuilder(patientId: patientId, tenantId: tenantId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /ehealth/v2/pcc/observation/patients/{patientId}/baselines
     - examples: [{contentType=application/json, example=""}]
     
     - parameter patientId: (path)  
     - parameter tenantId: (query)  (optional)

     - returns: RequestBuilder<String> 
     */
    open class func getVitalBaselinesWithRequestBuilder(patientId: String, tenantId: String? = nil) -> RequestBuilder<String> {
        var path = "/ehealth/v2/pcc/observation/patients/{patientId}/baselines"
        let patientIdPreEscape = "\(patientId)"
        let patientIdPostEscape = patientIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{patientId}", with: patientIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "tenantId": tenantId
        ])

        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter vitalId: (path)  
     - parameter tenantId: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getVitalByVitalId(vitalId: String, tenantId: String? = nil, completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        getVitalByVitalIdWithRequestBuilder(vitalId: vitalId, tenantId: tenantId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /ehealth/v2/pcc/observation/{vitalId}
     - examples: [{contentType=application/json, example=""}]
     
     - parameter vitalId: (path)  
     - parameter tenantId: (query)  (optional)

     - returns: RequestBuilder<String> 
     */
    open class func getVitalByVitalIdWithRequestBuilder(vitalId: String, tenantId: String? = nil) -> RequestBuilder<String> {
        var path = "/ehealth/v2/pcc/observation/{vitalId}"
        let vitalIdPreEscape = "\(vitalId)"
        let vitalIdPostEscape = vitalIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{vitalId}", with: vitalIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "tenantId": tenantId
        ])

        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter patientId: (path)  
     - parameter tenantId: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getVitalsByPatientId(patientId: String, tenantId: String? = nil, completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        getVitalsByPatientIdWithRequestBuilder(patientId: patientId, tenantId: tenantId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /ehealth/v2/pcc/observation/patients/{patientId}
     - examples: [{contentType=application/json, example=""}]
     
     - parameter patientId: (path)  
     - parameter tenantId: (query)  (optional)

     - returns: RequestBuilder<String> 
     */
    open class func getVitalsByPatientIdWithRequestBuilder(patientId: String, tenantId: String? = nil) -> RequestBuilder<String> {
        var path = "/ehealth/v2/pcc/observation/patients/{patientId}"
        let patientIdPreEscape = "\(patientId)"
        let patientIdPostEscape = patientIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{patientId}", with: patientIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "tenantId": tenantId
        ])

        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter body: (body)  (optional)
     - parameter tenantId: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postVital(body: String? = nil, tenantId: String? = nil, completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        postVitalWithRequestBuilder(body: body, tenantId: tenantId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /ehealth/v2/pcc/observation
     - examples: [{contentType=application/json, example=""}]
     
     - parameter body: (body)  (optional)
     - parameter tenantId: (query)  (optional)

     - returns: RequestBuilder<String> 
     */
    open class func postVitalWithRequestBuilder(body: String? = nil, tenantId: String? = nil) -> RequestBuilder<String> {
        let path = "/ehealth/v2/pcc/observation"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "tenantId": tenantId
        ])

        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}

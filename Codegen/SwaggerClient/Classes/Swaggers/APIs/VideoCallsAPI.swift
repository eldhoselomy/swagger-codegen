//
// CooeyAPIClient
// VideoCallsAPI.swift
//
// Generated by Eldhose Lomy
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class VideoCallsAPI {
    /**

     - parameter sessionId: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func callGet(sessionId: String, completion: @escaping ((_ data: VideoCallSession?,_ error: Error?) -> Void)) {
        callGetWithRequestBuilder(sessionId: sessionId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /ehealth/v2/video-calls/sessions/{sessionId}
     - examples: [{contentType=application/json, example={
  "participantIds" : [ "participantIds", "participantIds" ],
  "id" : "id",
  "createdOn" : 0,
  "createdById" : "createdById"
}}]
     
     - parameter sessionId: (path)  

     - returns: RequestBuilder<VideoCallSession> 
     */
    open class func callGetWithRequestBuilder(sessionId: String) -> RequestBuilder<VideoCallSession> {
        var path = "/ehealth/v2/video-calls/sessions/{sessionId}"
        let sessionIdPreEscape = "\(sessionId)"
        let sessionIdPostEscape = sessionIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{sessionId}", with: sessionIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VideoCallSession>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func create(body: VideoCallSession? = nil, completion: @escaping ((_ data: VideoCallSession?,_ error: Error?) -> Void)) {
        createWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /ehealth/v2/video-calls/sessions
     - examples: [{contentType=application/json, example={
  "participantIds" : [ "participantIds", "participantIds" ],
  "id" : "id",
  "createdOn" : 0,
  "createdById" : "createdById"
}}]
     
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<VideoCallSession> 
     */
    open class func createWithRequestBuilder(body: VideoCallSession? = nil) -> RequestBuilder<VideoCallSession> {
        let path = "/ehealth/v2/video-calls/sessions"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VideoCallSession>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**

     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createPariticipationEvent(body: VideoCallParticipationEvent? = nil, completion: @escaping ((_ data: VideoCallParticipationEvent?,_ error: Error?) -> Void)) {
        createPariticipationEventWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /ehealth/v2/video-calls/sessions/participation-events
     - examples: [{contentType=application/json, example={
  "id" : "id",
  "sessionId" : "sessionId",
  "event" : "CALL_JOINED",
  "userId" : "userId",
  "createdOn" : 0
}}]
     
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<VideoCallParticipationEvent> 
     */
    open class func createPariticipationEventWithRequestBuilder(body: VideoCallParticipationEvent? = nil) -> RequestBuilder<VideoCallParticipationEvent> {
        let path = "/ehealth/v2/video-calls/sessions/participation-events"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VideoCallParticipationEvent>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**

     - parameter sessionId: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getActiveParticipants(sessionId: String, completion: @escaping ((_ data: VideoCallActiveParticipants?,_ error: Error?) -> Void)) {
        getActiveParticipantsWithRequestBuilder(sessionId: sessionId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /ehealth/v2/video-calls/sessions/{sessionId}/participants/active
     - examples: [{contentType=application/json, example={
  "participantId" : "participantId",
  "participantProfilePhotoURL" : "participantProfilePhotoURL",
  "participantName" : "participantName"
}}]
     
     - parameter sessionId: (path)  

     - returns: RequestBuilder<VideoCallActiveParticipants> 
     */
    open class func getActiveParticipantsWithRequestBuilder(sessionId: String) -> RequestBuilder<VideoCallActiveParticipants> {
        var path = "/ehealth/v2/video-calls/sessions/{sessionId}/participants/active"
        let sessionIdPreEscape = "\(sessionId)"
        let sessionIdPostEscape = sessionIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{sessionId}", with: sessionIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VideoCallActiveParticipants>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func update(body: VideoCallSession? = nil, completion: @escaping ((_ data: VideoCallSession?,_ error: Error?) -> Void)) {
        updateWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - PUT /ehealth/v2/video-calls/sessions
     - examples: [{contentType=application/json, example={
  "participantIds" : [ "participantIds", "participantIds" ],
  "id" : "id",
  "createdOn" : 0,
  "createdById" : "createdById"
}}]
     
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<VideoCallSession> 
     */
    open class func updateWithRequestBuilder(body: VideoCallSession? = nil) -> RequestBuilder<VideoCallSession> {
        let path = "/ehealth/v2/video-calls/sessions"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<VideoCallSession>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}

//
// CooeyAPIClient
// AdhocTaskAPI.swift
//
// Generated by Eldhose Lomy
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class AdhocTaskAPI {
    /**

     - parameter xAuthToken: (header)  (optional)
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func assignCareplan(xAuthToken: String? = nil, body: AdhocTaskRequest? = nil, completion: @escaping ((_ data: AdhocTask?,_ error: Error?) -> Void)) {
        assignCareplanWithRequestBuilder(xAuthToken: xAuthToken, body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /ehealth/v2/adhoctasks/assignements
     - examples: [{contentType=application/json, example={
  "patientId" : "patientId",
  "description" : "description",
  "levelOfAssistance" : "levelOfAssistance",
  "createdOn" : 0,
  "evaluation" : "evaluation",
  "archived" : false,
  "assessment" : {
    "signature" : "signature"
  },
  "id" : "id",
  "beginTime" : 5,
  "isCompleted" : "isCompleted",
  "patientName" : "patientName",
  "goal" : "goal",
  "externalId" : "externalId",
  "active" : false,
  "diagnosis" : {
    "healthCondition" : "healthCondition",
    "symoptoms" : "symoptoms"
  },
  "assignedOn" : 1,
  "updatedOn" : 6,
  "history" : "history",
  "parentId" : "parentId",
  "tenantId" : "tenantId",
  "name" : "name",
  "progress" : "progress",
  "endTime" : 5,
  "applicationId" : "applicationId",
  "assignerId" : "assignerId"
}}]
     
     - parameter xAuthToken: (header)  (optional)
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<AdhocTask> 
     */
    open class func assignCareplanWithRequestBuilder(xAuthToken: String? = nil, body: AdhocTaskRequest? = nil) -> RequestBuilder<AdhocTask> {
        let path = "/ehealth/v2/adhoctasks/assignements"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "X-Auth-Token": xAuthToken
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<AdhocTask>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter adhocTaskId: (path)  
     - parameter xAuthToken: (header)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteAdhocTask(adhocTaskId: String, xAuthToken: String? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        deleteAdhocTaskWithRequestBuilder(adhocTaskId: adhocTaskId, xAuthToken: xAuthToken).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - DELETE /ehealth/v2/adhoctasks/{adhocTaskId}
     
     - parameter adhocTaskId: (path)  
     - parameter xAuthToken: (header)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func deleteAdhocTaskWithRequestBuilder(adhocTaskId: String, xAuthToken: String? = nil) -> RequestBuilder<Void> {
        var path = "/ehealth/v2/adhoctasks/{adhocTaskId}"
        let adhocTaskIdPreEscape = "\(adhocTaskId)"
        let adhocTaskIdPostEscape = adhocTaskIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{adhocTaskId}", with: adhocTaskIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "X-Auth-Token": xAuthToken
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter adhocTaskId: (path)  
     - parameter xAuthToken: (header)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getActionItem(adhocTaskId: String, xAuthToken: String? = nil, completion: @escaping ((_ data: [ActionItem]?,_ error: Error?) -> Void)) {
        getActionItemWithRequestBuilder(adhocTaskId: adhocTaskId, xAuthToken: xAuthToken).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /ehealth/v2/adhoctasks/actionItems/{adhocTaskId}
     - examples: [{contentType=application/json, example=[ {
  "notes" : "notes",
  "patientLatitude" : 2.027123023002322,
  "patientId" : "patientId",
  "latitude" : 7.061401241503109,
  "title" : "title",
  "type" : "type",
  "ownerId" : "ownerId",
  "createdOn" : 0,
  "archived" : false,
  "scheduledOn" : 2,
  "permissions" : "permissions",
  "contextType" : "contextType",
  "startTime" : 1,
  "id" : "id",
  "state" : "state",
  "patientLongitude" : 5.962133916683182,
  "longitude" : 9.301444243932576,
  "patientName" : "patientName",
  "externalId" : "externalId",
  "active" : false,
  "contextId" : "contextId",
  "postAction" : "postAction",
  "updatedOn" : 6,
  "completed" : false,
  "parentType" : "CAREPLAN",
  "completedEntityId" : "completedEntityId",
  "completedOn" : 5,
  "tenantId" : "tenantId",
  "endTime" : 3,
  "applicationId" : "applicationId",
  "parameters" : "parameters",
  "interventionId" : "interventionId",
  "completedBy" : "completedBy"
}, {
  "notes" : "notes",
  "patientLatitude" : 2.027123023002322,
  "patientId" : "patientId",
  "latitude" : 7.061401241503109,
  "title" : "title",
  "type" : "type",
  "ownerId" : "ownerId",
  "createdOn" : 0,
  "archived" : false,
  "scheduledOn" : 2,
  "permissions" : "permissions",
  "contextType" : "contextType",
  "startTime" : 1,
  "id" : "id",
  "state" : "state",
  "patientLongitude" : 5.962133916683182,
  "longitude" : 9.301444243932576,
  "patientName" : "patientName",
  "externalId" : "externalId",
  "active" : false,
  "contextId" : "contextId",
  "postAction" : "postAction",
  "updatedOn" : 6,
  "completed" : false,
  "parentType" : "CAREPLAN",
  "completedEntityId" : "completedEntityId",
  "completedOn" : 5,
  "tenantId" : "tenantId",
  "endTime" : 3,
  "applicationId" : "applicationId",
  "parameters" : "parameters",
  "interventionId" : "interventionId",
  "completedBy" : "completedBy"
} ]}]
     
     - parameter adhocTaskId: (path)  
     - parameter xAuthToken: (header)  (optional)

     - returns: RequestBuilder<[ActionItem]> 
     */
    open class func getActionItemWithRequestBuilder(adhocTaskId: String, xAuthToken: String? = nil) -> RequestBuilder<[ActionItem]> {
        var path = "/ehealth/v2/adhoctasks/actionItems/{adhocTaskId}"
        let adhocTaskIdPreEscape = "\(adhocTaskId)"
        let adhocTaskIdPostEscape = adhocTaskIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{adhocTaskId}", with: adhocTaskIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "X-Auth-Token": xAuthToken
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[ActionItem]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter adhocTaskId: (path)  
     - parameter xAuthToken: (header)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getById(adhocTaskId: String, xAuthToken: String? = nil, completion: @escaping ((_ data: AdhocTask?,_ error: Error?) -> Void)) {
        getByIdWithRequestBuilder(adhocTaskId: adhocTaskId, xAuthToken: xAuthToken).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /ehealth/v2/adhoctasks/{adhocTaskId}
     - examples: [{contentType=application/json, example={
  "patientId" : "patientId",
  "description" : "description",
  "levelOfAssistance" : "levelOfAssistance",
  "createdOn" : 0,
  "evaluation" : "evaluation",
  "archived" : false,
  "assessment" : {
    "signature" : "signature"
  },
  "id" : "id",
  "beginTime" : 5,
  "isCompleted" : "isCompleted",
  "patientName" : "patientName",
  "goal" : "goal",
  "externalId" : "externalId",
  "active" : false,
  "diagnosis" : {
    "healthCondition" : "healthCondition",
    "symoptoms" : "symoptoms"
  },
  "assignedOn" : 1,
  "updatedOn" : 6,
  "history" : "history",
  "parentId" : "parentId",
  "tenantId" : "tenantId",
  "name" : "name",
  "progress" : "progress",
  "endTime" : 5,
  "applicationId" : "applicationId",
  "assignerId" : "assignerId"
}}]
     
     - parameter adhocTaskId: (path)  
     - parameter xAuthToken: (header)  (optional)

     - returns: RequestBuilder<AdhocTask> 
     */
    open class func getByIdWithRequestBuilder(adhocTaskId: String, xAuthToken: String? = nil) -> RequestBuilder<AdhocTask> {
        var path = "/ehealth/v2/adhoctasks/{adhocTaskId}"
        let adhocTaskIdPreEscape = "\(adhocTaskId)"
        let adhocTaskIdPostEscape = adhocTaskIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{adhocTaskId}", with: adhocTaskIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "X-Auth-Token": xAuthToken
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<AdhocTask>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter xAuthToken: (header)  (optional)
     - parameter tenantId: (query)  (optional)
     - parameter offset: (query)  (optional, default to 0)
     - parameter limit: (query)  (optional, default to 5)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getCareplansForCaretaker(xAuthToken: String? = nil, tenantId: String? = nil, offset: Int? = nil, limit: Int? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        getCareplansForCaretakerWithRequestBuilder(xAuthToken: xAuthToken, tenantId: tenantId, offset: offset, limit: limit).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - GET /ehealth/v2/adhoctasks
     
     - parameter xAuthToken: (header)  (optional)
     - parameter tenantId: (query)  (optional)
     - parameter offset: (query)  (optional, default to 0)
     - parameter limit: (query)  (optional, default to 5)

     - returns: RequestBuilder<Void> 
     */
    open class func getCareplansForCaretakerWithRequestBuilder(xAuthToken: String? = nil, tenantId: String? = nil, offset: Int? = nil, limit: Int? = nil) -> RequestBuilder<Void> {
        let path = "/ehealth/v2/adhoctasks"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "tenantId": tenantId, 
            "offset": offset?.encodeToJSON(), 
            "limit": limit?.encodeToJSON()
        ])
        let nillableHeaders: [String: Any?] = [
            "X-Auth-Token": xAuthToken
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter xAuthToken: (header)  (optional)
     - parameter tenantId: (query)  (optional)
     - parameter query: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func searchAdhocTasks(xAuthToken: String? = nil, tenantId: String? = nil, query: String? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        searchAdhocTasksWithRequestBuilder(xAuthToken: xAuthToken, tenantId: tenantId, query: query).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - GET /ehealth/v2/adhoctasks/search
     
     - parameter xAuthToken: (header)  (optional)
     - parameter tenantId: (query)  (optional)
     - parameter query: (query)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func searchAdhocTasksWithRequestBuilder(xAuthToken: String? = nil, tenantId: String? = nil, query: String? = nil) -> RequestBuilder<Void> {
        let path = "/ehealth/v2/adhoctasks/search"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "tenantId": tenantId, 
            "query": query
        ])
        let nillableHeaders: [String: Any?] = [
            "X-Auth-Token": xAuthToken
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

}

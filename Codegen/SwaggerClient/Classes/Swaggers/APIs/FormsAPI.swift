//
// CooeyAPIClient
// FormsAPI.swift
//
// Generated by Eldhose Lomy
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class FormsAPI {
    /**

     - parameter formBluePrintId: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func archiveFormBlueprint(formBluePrintId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        archiveFormBlueprintWithRequestBuilder(formBluePrintId: formBluePrintId).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - DELETE /ehealth/v2/forms/blueprints/{formBluePrintId}
     
     - parameter formBluePrintId: (path)  

     - returns: RequestBuilder<Void> 
     */
    open class func archiveFormBlueprintWithRequestBuilder(formBluePrintId: String) -> RequestBuilder<Void> {
        var path = "/ehealth/v2/forms/blueprints/{formBluePrintId}"
        let formBluePrintIdPreEscape = "\(formBluePrintId)"
        let formBluePrintIdPostEscape = formBluePrintIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{formBluePrintId}", with: formBluePrintIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter formId: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func callGet(formId: String, completion: @escaping ((_ data: Form?,_ error: Error?) -> Void)) {
        callGetWithRequestBuilder(formId: formId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /ehealth/v2/forms/{formId}
     - examples: [{contentType=application/json, example={
  "ownerType" : "TENANT",
  "formHeader" : {
    "headerLogo" : "headerLogo",
    "headerTitle" : "headerTitle"
  },
  "externalId" : "externalId",
  "active" : false,
  "assignedOn" : 2,
  "updatedOn" : 5,
  "completed" : false,
  "ownerId" : "ownerId",
  "type" : "type",
  "createdOn" : 1,
  "assigneeId" : "assigneeId",
  "tags" : [ "tags", "tags" ],
  "archived" : false,
  "percentageComplete" : 5.637376656633329,
  "completedOn" : 7,
  "tenantId" : "tenantId",
  "name" : "name",
  "id" : "id",
  "applicationId" : "applicationId",
  "sectionList" : [ {
    "formId" : "formId",
    "fieldInputs" : {
      "fieldComponent" : [ {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      }, {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      } ]
    },
    "sectionMode" : "CASCADING",
    "sectionDescription" : "sectionDescription",
    "sectionHeading" : "sectionHeading"
  }, {
    "formId" : "formId",
    "fieldInputs" : {
      "fieldComponent" : [ {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      }, {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      } ]
    },
    "sectionMode" : "CASCADING",
    "sectionDescription" : "sectionDescription",
    "sectionHeading" : "sectionHeading"
  } ],
  "formFooter" : {
    "vendorSignatureTile" : "vendorSignatureTile",
    "consumerSignatureTitle" : "consumerSignatureTitle"
  },
  "assignerId" : "assignerId"
}}]
     
     - parameter formId: (path)  

     - returns: RequestBuilder<Form> 
     */
    open class func callGetWithRequestBuilder(formId: String) -> RequestBuilder<Form> {
        var path = "/ehealth/v2/forms/{formId}"
        let formIdPreEscape = "\(formId)"
        let formIdPostEscape = formIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{formId}", with: formIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Form>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func create(body: Form? = nil, completion: @escaping ((_ data: Form?,_ error: Error?) -> Void)) {
        createWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /ehealth/v2/forms
     - examples: [{contentType=application/json, example={
  "ownerType" : "TENANT",
  "formHeader" : {
    "headerLogo" : "headerLogo",
    "headerTitle" : "headerTitle"
  },
  "externalId" : "externalId",
  "active" : false,
  "assignedOn" : 2,
  "updatedOn" : 5,
  "completed" : false,
  "ownerId" : "ownerId",
  "type" : "type",
  "createdOn" : 1,
  "assigneeId" : "assigneeId",
  "tags" : [ "tags", "tags" ],
  "archived" : false,
  "percentageComplete" : 5.637376656633329,
  "completedOn" : 7,
  "tenantId" : "tenantId",
  "name" : "name",
  "id" : "id",
  "applicationId" : "applicationId",
  "sectionList" : [ {
    "formId" : "formId",
    "fieldInputs" : {
      "fieldComponent" : [ {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      }, {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      } ]
    },
    "sectionMode" : "CASCADING",
    "sectionDescription" : "sectionDescription",
    "sectionHeading" : "sectionHeading"
  }, {
    "formId" : "formId",
    "fieldInputs" : {
      "fieldComponent" : [ {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      }, {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      } ]
    },
    "sectionMode" : "CASCADING",
    "sectionDescription" : "sectionDescription",
    "sectionHeading" : "sectionHeading"
  } ],
  "formFooter" : {
    "vendorSignatureTile" : "vendorSignatureTile",
    "consumerSignatureTitle" : "consumerSignatureTitle"
  },
  "assignerId" : "assignerId"
}}]
     
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<Form> 
     */
    open class func createWithRequestBuilder(body: Form? = nil) -> RequestBuilder<Form> {
        let path = "/ehealth/v2/forms"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Form>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**

     - parameter xAuthToken: (header)  (optional)
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func create_0(xAuthToken: String? = nil, body: FormBluePrint? = nil, completion: @escaping ((_ data: FormBluePrint?,_ error: Error?) -> Void)) {
        create_0WithRequestBuilder(xAuthToken: xAuthToken, body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /ehealth/v2/forms/blueprints
     - examples: [{contentType=application/json, example={
  "ownerType" : "TENANT",
  "formHeader" : {
    "headerLogo" : "headerLogo",
    "headerTitle" : "headerTitle"
  },
  "externalId" : "externalId",
  "active" : false,
  "updatedOn" : 2,
  "ownerId" : "ownerId",
  "type" : "type",
  "createdOn" : 3,
  "tags" : [ "tags", "tags" ],
  "archived" : false,
  "percentageComplete" : 4.145608029883936,
  "tenantId" : "tenantId",
  "name" : "name",
  "id" : "id",
  "applicationId" : "applicationId",
  "sectionList" : [ {
    "formId" : "formId",
    "fieldInputs" : {
      "fieldComponent" : [ {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      }, {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      } ]
    },
    "sectionMode" : "CASCADING",
    "sectionDescription" : "sectionDescription",
    "sectionHeading" : "sectionHeading"
  }, {
    "formId" : "formId",
    "fieldInputs" : {
      "fieldComponent" : [ {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      }, {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      } ]
    },
    "sectionMode" : "CASCADING",
    "sectionDescription" : "sectionDescription",
    "sectionHeading" : "sectionHeading"
  } ],
  "formFooter" : {
    "vendorSignatureTile" : "vendorSignatureTile",
    "consumerSignatureTitle" : "consumerSignatureTitle"
  }
}}]
     
     - parameter xAuthToken: (header)  (optional)
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<FormBluePrint> 
     */
    open class func create_0WithRequestBuilder(xAuthToken: String? = nil, body: FormBluePrint? = nil) -> RequestBuilder<FormBluePrint> {
        let path = "/ehealth/v2/forms/blueprints"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "X-Auth-Token": xAuthToken
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<FormBluePrint>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter xAuthToken: (header)  (optional)
     - parameter offset: (query)  (optional, default to 0)
     - parameter limit: (query)  (optional, default to 5)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getSurvey(xAuthToken: String? = nil, offset: Int? = nil, limit: Int? = nil, completion: @escaping ((_ data: [Form]?,_ error: Error?) -> Void)) {
        getSurveyWithRequestBuilder(xAuthToken: xAuthToken, offset: offset, limit: limit).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /ehealth/v2/forms/forms
     - examples: [{contentType=application/json, example=[ {
  "ownerType" : "TENANT",
  "formHeader" : {
    "headerLogo" : "headerLogo",
    "headerTitle" : "headerTitle"
  },
  "externalId" : "externalId",
  "active" : false,
  "assignedOn" : 2,
  "updatedOn" : 5,
  "completed" : false,
  "ownerId" : "ownerId",
  "type" : "type",
  "createdOn" : 1,
  "assigneeId" : "assigneeId",
  "tags" : [ "tags", "tags" ],
  "archived" : false,
  "percentageComplete" : 5.637376656633329,
  "completedOn" : 7,
  "tenantId" : "tenantId",
  "name" : "name",
  "id" : "id",
  "applicationId" : "applicationId",
  "sectionList" : [ {
    "formId" : "formId",
    "fieldInputs" : {
      "fieldComponent" : [ {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      }, {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      } ]
    },
    "sectionMode" : "CASCADING",
    "sectionDescription" : "sectionDescription",
    "sectionHeading" : "sectionHeading"
  }, {
    "formId" : "formId",
    "fieldInputs" : {
      "fieldComponent" : [ {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      }, {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      } ]
    },
    "sectionMode" : "CASCADING",
    "sectionDescription" : "sectionDescription",
    "sectionHeading" : "sectionHeading"
  } ],
  "formFooter" : {
    "vendorSignatureTile" : "vendorSignatureTile",
    "consumerSignatureTitle" : "consumerSignatureTitle"
  },
  "assignerId" : "assignerId"
}, {
  "ownerType" : "TENANT",
  "formHeader" : {
    "headerLogo" : "headerLogo",
    "headerTitle" : "headerTitle"
  },
  "externalId" : "externalId",
  "active" : false,
  "assignedOn" : 2,
  "updatedOn" : 5,
  "completed" : false,
  "ownerId" : "ownerId",
  "type" : "type",
  "createdOn" : 1,
  "assigneeId" : "assigneeId",
  "tags" : [ "tags", "tags" ],
  "archived" : false,
  "percentageComplete" : 5.637376656633329,
  "completedOn" : 7,
  "tenantId" : "tenantId",
  "name" : "name",
  "id" : "id",
  "applicationId" : "applicationId",
  "sectionList" : [ {
    "formId" : "formId",
    "fieldInputs" : {
      "fieldComponent" : [ {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      }, {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      } ]
    },
    "sectionMode" : "CASCADING",
    "sectionDescription" : "sectionDescription",
    "sectionHeading" : "sectionHeading"
  }, {
    "formId" : "formId",
    "fieldInputs" : {
      "fieldComponent" : [ {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      }, {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      } ]
    },
    "sectionMode" : "CASCADING",
    "sectionDescription" : "sectionDescription",
    "sectionHeading" : "sectionHeading"
  } ],
  "formFooter" : {
    "vendorSignatureTile" : "vendorSignatureTile",
    "consumerSignatureTitle" : "consumerSignatureTitle"
  },
  "assignerId" : "assignerId"
} ]}]
     
     - parameter xAuthToken: (header)  (optional)
     - parameter offset: (query)  (optional, default to 0)
     - parameter limit: (query)  (optional, default to 5)

     - returns: RequestBuilder<[Form]> 
     */
    open class func getSurveyWithRequestBuilder(xAuthToken: String? = nil, offset: Int? = nil, limit: Int? = nil) -> RequestBuilder<[Form]> {
        let path = "/ehealth/v2/forms/forms"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "offset": offset?.encodeToJSON(), 
            "limit": limit?.encodeToJSON()
        ])
        let nillableHeaders: [String: Any?] = [
            "X-Auth-Token": xAuthToken
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[Form]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter xAuthToken: (header)  (optional)
     - parameter offset: (query)  (optional, default to 0)
     - parameter limit: (query)  (optional, default to 5)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getSurveyBlurprint(xAuthToken: String? = nil, offset: Int? = nil, limit: Int? = nil, completion: @escaping ((_ data: [FormBluePrint]?,_ error: Error?) -> Void)) {
        getSurveyBlurprintWithRequestBuilder(xAuthToken: xAuthToken, offset: offset, limit: limit).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /ehealth/v2/forms/blueprints
     - examples: [{contentType=application/json, example=[ {
  "ownerType" : "TENANT",
  "formHeader" : {
    "headerLogo" : "headerLogo",
    "headerTitle" : "headerTitle"
  },
  "externalId" : "externalId",
  "active" : false,
  "updatedOn" : 2,
  "ownerId" : "ownerId",
  "type" : "type",
  "createdOn" : 3,
  "tags" : [ "tags", "tags" ],
  "archived" : false,
  "percentageComplete" : 4.145608029883936,
  "tenantId" : "tenantId",
  "name" : "name",
  "id" : "id",
  "applicationId" : "applicationId",
  "sectionList" : [ {
    "formId" : "formId",
    "fieldInputs" : {
      "fieldComponent" : [ {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      }, {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      } ]
    },
    "sectionMode" : "CASCADING",
    "sectionDescription" : "sectionDescription",
    "sectionHeading" : "sectionHeading"
  }, {
    "formId" : "formId",
    "fieldInputs" : {
      "fieldComponent" : [ {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      }, {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      } ]
    },
    "sectionMode" : "CASCADING",
    "sectionDescription" : "sectionDescription",
    "sectionHeading" : "sectionHeading"
  } ],
  "formFooter" : {
    "vendorSignatureTile" : "vendorSignatureTile",
    "consumerSignatureTitle" : "consumerSignatureTitle"
  }
}, {
  "ownerType" : "TENANT",
  "formHeader" : {
    "headerLogo" : "headerLogo",
    "headerTitle" : "headerTitle"
  },
  "externalId" : "externalId",
  "active" : false,
  "updatedOn" : 2,
  "ownerId" : "ownerId",
  "type" : "type",
  "createdOn" : 3,
  "tags" : [ "tags", "tags" ],
  "archived" : false,
  "percentageComplete" : 4.145608029883936,
  "tenantId" : "tenantId",
  "name" : "name",
  "id" : "id",
  "applicationId" : "applicationId",
  "sectionList" : [ {
    "formId" : "formId",
    "fieldInputs" : {
      "fieldComponent" : [ {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      }, {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      } ]
    },
    "sectionMode" : "CASCADING",
    "sectionDescription" : "sectionDescription",
    "sectionHeading" : "sectionHeading"
  }, {
    "formId" : "formId",
    "fieldInputs" : {
      "fieldComponent" : [ {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      }, {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      } ]
    },
    "sectionMode" : "CASCADING",
    "sectionDescription" : "sectionDescription",
    "sectionHeading" : "sectionHeading"
  } ],
  "formFooter" : {
    "vendorSignatureTile" : "vendorSignatureTile",
    "consumerSignatureTitle" : "consumerSignatureTitle"
  }
} ]}]
     
     - parameter xAuthToken: (header)  (optional)
     - parameter offset: (query)  (optional, default to 0)
     - parameter limit: (query)  (optional, default to 5)

     - returns: RequestBuilder<[FormBluePrint]> 
     */
    open class func getSurveyBlurprintWithRequestBuilder(xAuthToken: String? = nil, offset: Int? = nil, limit: Int? = nil) -> RequestBuilder<[FormBluePrint]> {
        let path = "/ehealth/v2/forms/blueprints"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "offset": offset?.encodeToJSON(), 
            "limit": limit?.encodeToJSON()
        ])
        let nillableHeaders: [String: Any?] = [
            "X-Auth-Token": xAuthToken
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[FormBluePrint]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter formBluePrintId: (path)  
     - parameter xAuthToken: (header)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getSurveyBlurprintById(formBluePrintId: String, xAuthToken: String? = nil, completion: @escaping ((_ data: FormBluePrint?,_ error: Error?) -> Void)) {
        getSurveyBlurprintByIdWithRequestBuilder(formBluePrintId: formBluePrintId, xAuthToken: xAuthToken).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /ehealth/v2/forms/blueprints/{formBluePrintId}
     - examples: [{contentType=application/json, example={
  "ownerType" : "TENANT",
  "formHeader" : {
    "headerLogo" : "headerLogo",
    "headerTitle" : "headerTitle"
  },
  "externalId" : "externalId",
  "active" : false,
  "updatedOn" : 2,
  "ownerId" : "ownerId",
  "type" : "type",
  "createdOn" : 3,
  "tags" : [ "tags", "tags" ],
  "archived" : false,
  "percentageComplete" : 4.145608029883936,
  "tenantId" : "tenantId",
  "name" : "name",
  "id" : "id",
  "applicationId" : "applicationId",
  "sectionList" : [ {
    "formId" : "formId",
    "fieldInputs" : {
      "fieldComponent" : [ {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      }, {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      } ]
    },
    "sectionMode" : "CASCADING",
    "sectionDescription" : "sectionDescription",
    "sectionHeading" : "sectionHeading"
  }, {
    "formId" : "formId",
    "fieldInputs" : {
      "fieldComponent" : [ {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      }, {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      } ]
    },
    "sectionMode" : "CASCADING",
    "sectionDescription" : "sectionDescription",
    "sectionHeading" : "sectionHeading"
  } ],
  "formFooter" : {
    "vendorSignatureTile" : "vendorSignatureTile",
    "consumerSignatureTitle" : "consumerSignatureTitle"
  }
}}]
     
     - parameter formBluePrintId: (path)  
     - parameter xAuthToken: (header)  (optional)

     - returns: RequestBuilder<FormBluePrint> 
     */
    open class func getSurveyBlurprintByIdWithRequestBuilder(formBluePrintId: String, xAuthToken: String? = nil) -> RequestBuilder<FormBluePrint> {
        var path = "/ehealth/v2/forms/blueprints/{formBluePrintId}"
        let formBluePrintIdPreEscape = "\(formBluePrintId)"
        let formBluePrintIdPostEscape = formBluePrintIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{formBluePrintId}", with: formBluePrintIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "X-Auth-Token": xAuthToken
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<FormBluePrint>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter patientId: (path)  
     - parameter xAuthToken: (header)  (optional)
     - parameter offset: (query)  (optional, default to 0)
     - parameter limit: (query)  (optional, default to 5)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getSurveyBlurprintFilteredWithPatientsProfileTag(patientId: String, xAuthToken: String? = nil, offset: Int? = nil, limit: Int? = nil, completion: @escaping ((_ data: [FormBluePrint]?,_ error: Error?) -> Void)) {
        getSurveyBlurprintFilteredWithPatientsProfileTagWithRequestBuilder(patientId: patientId, xAuthToken: xAuthToken, offset: offset, limit: limit).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /ehealth/v2/forms/blueprints/patient/{patientId}
     - examples: [{contentType=application/json, example=[ {
  "ownerType" : "TENANT",
  "formHeader" : {
    "headerLogo" : "headerLogo",
    "headerTitle" : "headerTitle"
  },
  "externalId" : "externalId",
  "active" : false,
  "updatedOn" : 2,
  "ownerId" : "ownerId",
  "type" : "type",
  "createdOn" : 3,
  "tags" : [ "tags", "tags" ],
  "archived" : false,
  "percentageComplete" : 4.145608029883936,
  "tenantId" : "tenantId",
  "name" : "name",
  "id" : "id",
  "applicationId" : "applicationId",
  "sectionList" : [ {
    "formId" : "formId",
    "fieldInputs" : {
      "fieldComponent" : [ {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      }, {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      } ]
    },
    "sectionMode" : "CASCADING",
    "sectionDescription" : "sectionDescription",
    "sectionHeading" : "sectionHeading"
  }, {
    "formId" : "formId",
    "fieldInputs" : {
      "fieldComponent" : [ {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      }, {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      } ]
    },
    "sectionMode" : "CASCADING",
    "sectionDescription" : "sectionDescription",
    "sectionHeading" : "sectionHeading"
  } ],
  "formFooter" : {
    "vendorSignatureTile" : "vendorSignatureTile",
    "consumerSignatureTitle" : "consumerSignatureTitle"
  }
}, {
  "ownerType" : "TENANT",
  "formHeader" : {
    "headerLogo" : "headerLogo",
    "headerTitle" : "headerTitle"
  },
  "externalId" : "externalId",
  "active" : false,
  "updatedOn" : 2,
  "ownerId" : "ownerId",
  "type" : "type",
  "createdOn" : 3,
  "tags" : [ "tags", "tags" ],
  "archived" : false,
  "percentageComplete" : 4.145608029883936,
  "tenantId" : "tenantId",
  "name" : "name",
  "id" : "id",
  "applicationId" : "applicationId",
  "sectionList" : [ {
    "formId" : "formId",
    "fieldInputs" : {
      "fieldComponent" : [ {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      }, {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      } ]
    },
    "sectionMode" : "CASCADING",
    "sectionDescription" : "sectionDescription",
    "sectionHeading" : "sectionHeading"
  }, {
    "formId" : "formId",
    "fieldInputs" : {
      "fieldComponent" : [ {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      }, {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      } ]
    },
    "sectionMode" : "CASCADING",
    "sectionDescription" : "sectionDescription",
    "sectionHeading" : "sectionHeading"
  } ],
  "formFooter" : {
    "vendorSignatureTile" : "vendorSignatureTile",
    "consumerSignatureTitle" : "consumerSignatureTitle"
  }
} ]}]
     
     - parameter patientId: (path)  
     - parameter xAuthToken: (header)  (optional)
     - parameter offset: (query)  (optional, default to 0)
     - parameter limit: (query)  (optional, default to 5)

     - returns: RequestBuilder<[FormBluePrint]> 
     */
    open class func getSurveyBlurprintFilteredWithPatientsProfileTagWithRequestBuilder(patientId: String, xAuthToken: String? = nil, offset: Int? = nil, limit: Int? = nil) -> RequestBuilder<[FormBluePrint]> {
        var path = "/ehealth/v2/forms/blueprints/patient/{patientId}"
        let patientIdPreEscape = "\(patientId)"
        let patientIdPostEscape = patientIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{patientId}", with: patientIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "offset": offset?.encodeToJSON(), 
            "limit": limit?.encodeToJSON()
        ])
        let nillableHeaders: [String: Any?] = [
            "X-Auth-Token": xAuthToken
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[FormBluePrint]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter xAuthToken: (header)  (optional)
     - parameter query: (query)  (optional)
     - parameter authKey: (query)  (optional)
     - parameter offset: (query)  (optional, default to 0)
     - parameter limit: (query)  (optional, default to 5)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func searchBluePrint(xAuthToken: String? = nil, query: String? = nil, authKey: String? = nil, offset: Int? = nil, limit: Int? = nil, completion: @escaping ((_ data: [FormBluePrint]?,_ error: Error?) -> Void)) {
        searchBluePrintWithRequestBuilder(xAuthToken: xAuthToken, query: query, authKey: authKey, offset: offset, limit: limit).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /ehealth/v2/forms/blueprints/search
     - examples: [{contentType=application/json, example=[ {
  "ownerType" : "TENANT",
  "formHeader" : {
    "headerLogo" : "headerLogo",
    "headerTitle" : "headerTitle"
  },
  "externalId" : "externalId",
  "active" : false,
  "updatedOn" : 2,
  "ownerId" : "ownerId",
  "type" : "type",
  "createdOn" : 3,
  "tags" : [ "tags", "tags" ],
  "archived" : false,
  "percentageComplete" : 4.145608029883936,
  "tenantId" : "tenantId",
  "name" : "name",
  "id" : "id",
  "applicationId" : "applicationId",
  "sectionList" : [ {
    "formId" : "formId",
    "fieldInputs" : {
      "fieldComponent" : [ {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      }, {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      } ]
    },
    "sectionMode" : "CASCADING",
    "sectionDescription" : "sectionDescription",
    "sectionHeading" : "sectionHeading"
  }, {
    "formId" : "formId",
    "fieldInputs" : {
      "fieldComponent" : [ {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      }, {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      } ]
    },
    "sectionMode" : "CASCADING",
    "sectionDescription" : "sectionDescription",
    "sectionHeading" : "sectionHeading"
  } ],
  "formFooter" : {
    "vendorSignatureTile" : "vendorSignatureTile",
    "consumerSignatureTitle" : "consumerSignatureTitle"
  }
}, {
  "ownerType" : "TENANT",
  "formHeader" : {
    "headerLogo" : "headerLogo",
    "headerTitle" : "headerTitle"
  },
  "externalId" : "externalId",
  "active" : false,
  "updatedOn" : 2,
  "ownerId" : "ownerId",
  "type" : "type",
  "createdOn" : 3,
  "tags" : [ "tags", "tags" ],
  "archived" : false,
  "percentageComplete" : 4.145608029883936,
  "tenantId" : "tenantId",
  "name" : "name",
  "id" : "id",
  "applicationId" : "applicationId",
  "sectionList" : [ {
    "formId" : "formId",
    "fieldInputs" : {
      "fieldComponent" : [ {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      }, {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      } ]
    },
    "sectionMode" : "CASCADING",
    "sectionDescription" : "sectionDescription",
    "sectionHeading" : "sectionHeading"
  }, {
    "formId" : "formId",
    "fieldInputs" : {
      "fieldComponent" : [ {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      }, {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      } ]
    },
    "sectionMode" : "CASCADING",
    "sectionDescription" : "sectionDescription",
    "sectionHeading" : "sectionHeading"
  } ],
  "formFooter" : {
    "vendorSignatureTile" : "vendorSignatureTile",
    "consumerSignatureTitle" : "consumerSignatureTitle"
  }
} ]}]
     
     - parameter xAuthToken: (header)  (optional)
     - parameter query: (query)  (optional)
     - parameter authKey: (query)  (optional)
     - parameter offset: (query)  (optional, default to 0)
     - parameter limit: (query)  (optional, default to 5)

     - returns: RequestBuilder<[FormBluePrint]> 
     */
    open class func searchBluePrintWithRequestBuilder(xAuthToken: String? = nil, query: String? = nil, authKey: String? = nil, offset: Int? = nil, limit: Int? = nil) -> RequestBuilder<[FormBluePrint]> {
        let path = "/ehealth/v2/forms/blueprints/search"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "query": query, 
            "authKey": authKey, 
            "offset": offset?.encodeToJSON(), 
            "limit": limit?.encodeToJSON()
        ])
        let nillableHeaders: [String: Any?] = [
            "X-Auth-Token": xAuthToken
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[FormBluePrint]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func update(body: Form? = nil, completion: @escaping ((_ data: Form?,_ error: Error?) -> Void)) {
        updateWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - PUT /ehealth/v2/forms
     - examples: [{contentType=application/json, example={
  "ownerType" : "TENANT",
  "formHeader" : {
    "headerLogo" : "headerLogo",
    "headerTitle" : "headerTitle"
  },
  "externalId" : "externalId",
  "active" : false,
  "assignedOn" : 2,
  "updatedOn" : 5,
  "completed" : false,
  "ownerId" : "ownerId",
  "type" : "type",
  "createdOn" : 1,
  "assigneeId" : "assigneeId",
  "tags" : [ "tags", "tags" ],
  "archived" : false,
  "percentageComplete" : 5.637376656633329,
  "completedOn" : 7,
  "tenantId" : "tenantId",
  "name" : "name",
  "id" : "id",
  "applicationId" : "applicationId",
  "sectionList" : [ {
    "formId" : "formId",
    "fieldInputs" : {
      "fieldComponent" : [ {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      }, {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      } ]
    },
    "sectionMode" : "CASCADING",
    "sectionDescription" : "sectionDescription",
    "sectionHeading" : "sectionHeading"
  }, {
    "formId" : "formId",
    "fieldInputs" : {
      "fieldComponent" : [ {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      }, {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      } ]
    },
    "sectionMode" : "CASCADING",
    "sectionDescription" : "sectionDescription",
    "sectionHeading" : "sectionHeading"
  } ],
  "formFooter" : {
    "vendorSignatureTile" : "vendorSignatureTile",
    "consumerSignatureTitle" : "consumerSignatureTitle"
  },
  "assignerId" : "assignerId"
}}]
     
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<Form> 
     */
    open class func updateWithRequestBuilder(body: Form? = nil) -> RequestBuilder<Form> {
        let path = "/ehealth/v2/forms"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Form>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**

     - parameter xAuthToken: (header)  (optional)
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func update_0(xAuthToken: String? = nil, body: FormBluePrint? = nil, completion: @escaping ((_ data: FormBluePrint?,_ error: Error?) -> Void)) {
        update_0WithRequestBuilder(xAuthToken: xAuthToken, body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - PUT /ehealth/v2/forms/blueprints
     - examples: [{contentType=application/json, example={
  "ownerType" : "TENANT",
  "formHeader" : {
    "headerLogo" : "headerLogo",
    "headerTitle" : "headerTitle"
  },
  "externalId" : "externalId",
  "active" : false,
  "updatedOn" : 2,
  "ownerId" : "ownerId",
  "type" : "type",
  "createdOn" : 3,
  "tags" : [ "tags", "tags" ],
  "archived" : false,
  "percentageComplete" : 4.145608029883936,
  "tenantId" : "tenantId",
  "name" : "name",
  "id" : "id",
  "applicationId" : "applicationId",
  "sectionList" : [ {
    "formId" : "formId",
    "fieldInputs" : {
      "fieldComponent" : [ {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      }, {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      } ]
    },
    "sectionMode" : "CASCADING",
    "sectionDescription" : "sectionDescription",
    "sectionHeading" : "sectionHeading"
  }, {
    "formId" : "formId",
    "fieldInputs" : {
      "fieldComponent" : [ {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      }, {
        "template" : "{}",
        "archived" : false,
        "contextGraphEnabled" : false,
        "tenantId" : "tenantId",
        "externalId" : "externalId",
        "active" : false,
        "updatedOn" : 1,
        "applicationId" : "applicationId",
        "title" : "title",
        "type" : "type",
        "createdOn" : 7,
        "mandatory" : false
      } ]
    },
    "sectionMode" : "CASCADING",
    "sectionDescription" : "sectionDescription",
    "sectionHeading" : "sectionHeading"
  } ],
  "formFooter" : {
    "vendorSignatureTile" : "vendorSignatureTile",
    "consumerSignatureTitle" : "consumerSignatureTitle"
  }
}}]
     
     - parameter xAuthToken: (header)  (optional)
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<FormBluePrint> 
     */
    open class func update_0WithRequestBuilder(xAuthToken: String? = nil, body: FormBluePrint? = nil) -> RequestBuilder<FormBluePrint> {
        let path = "/ehealth/v2/forms/blueprints"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "X-Auth-Token": xAuthToken
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<FormBluePrint>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true, headers: headerParameters)
    }

}

//
// CooeyAPIClient
// PccAPI.swift
//
// Generated by Eldhose Lomy
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class PccAPI {
    /**

     - parameter tenantId: (path)  
     - parameter code: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func authorizePCC(tenantId: String, code: String? = nil, completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        authorizePCCWithRequestBuilder(tenantId: tenantId, code: code).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /ehealth/v2/pcc/authorizePCC/{tenantId}
     - examples: [{contentType=application/json, example=""}]
     
     - parameter tenantId: (path)  
     - parameter code: (query)  (optional)

     - returns: RequestBuilder<String> 
     */
    open class func authorizePCCWithRequestBuilder(tenantId: String, code: String? = nil) -> RequestBuilder<String> {
        var path = "/ehealth/v2/pcc/authorizePCC/{tenantId}"
        let tenantIdPreEscape = "\(tenantId)"
        let tenantIdPostEscape = tenantIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{tenantId}", with: tenantIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "code": code
        ])

        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter tenantId: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func isPCCLinked(tenantId: String, completion: @escaping ((_ data: Bool?,_ error: Error?) -> Void)) {
        isPCCLinkedWithRequestBuilder(tenantId: tenantId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /ehealth/v2/pcc/{tenantId}/islinked
     - examples: [{contentType=application/json, example=true}]
     
     - parameter tenantId: (path)  

     - returns: RequestBuilder<Bool> 
     */
    open class func isPCCLinkedWithRequestBuilder(tenantId: String) -> RequestBuilder<Bool> {
        var path = "/ehealth/v2/pcc/{tenantId}/islinked"
        let tenantIdPreEscape = "\(tenantId)"
        let tenantIdPostEscape = tenantIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{tenantId}", with: tenantIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Bool>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func linkaccount(body: AccessControl? = nil, completion: @escaping ((_ data: AccessControl?,_ error: Error?) -> Void)) {
        linkaccountWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /ehealth/v2/pcc/linkaccount
     - examples: [{contentType=application/json, example={
  "refreshTokenExpiresIn" : 5,
  "externalId" : "externalId",
  "active" : false,
  "updatedOn" : 6,
  "cooeyId" : "cooeyId",
  "accessToken" : "accessToken",
  "createdOn" : 0,
  "orgId" : 2,
  "expiresIn" : 1,
  "archived" : false,
  "tenantId" : "tenantId",
  "expiresOn" : 5,
  "applicationId" : "applicationId",
  "refreshToken" : "refreshToken"
}}]
     
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<AccessControl> 
     */
    open class func linkaccountWithRequestBuilder(body: AccessControl? = nil) -> RequestBuilder<AccessControl> {
        let path = "/ehealth/v2/pcc/linkaccount"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<AccessControl>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**

     - parameter tenantId: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func pcclink(tenantId: String? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        pcclinkWithRequestBuilder(tenantId: tenantId).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - POST /ehealth/v2/pcc/pcclink
     
     - parameter tenantId: (query)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func pcclinkWithRequestBuilder(tenantId: String? = nil) -> RequestBuilder<Void> {
        let path = "/ehealth/v2/pcc/pcclink"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "tenantId": tenantId
        ])

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter tenantId: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func refreshToken(tenantId: String? = nil, completion: @escaping ((_ data: Bool?,_ error: Error?) -> Void)) {
        refreshTokenWithRequestBuilder(tenantId: tenantId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /ehealth/v2/pcc/token
     - examples: [{contentType=application/json, example=true}]
     
     - parameter tenantId: (query)  (optional)

     - returns: RequestBuilder<Bool> 
     */
    open class func refreshTokenWithRequestBuilder(tenantId: String? = nil) -> RequestBuilder<Bool> {
        let path = "/ehealth/v2/pcc/token"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "tenantId": tenantId
        ])

        let requestBuilder: RequestBuilder<Bool>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter tenantId: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func revokeAccount(tenantId: String, completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        revokeAccountWithRequestBuilder(tenantId: tenantId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /ehealth/v2/pcc/revokeaccount/{tenantId}
     - examples: [{contentType=application/json, example=""}]
     
     - parameter tenantId: (path)  

     - returns: RequestBuilder<String> 
     */
    open class func revokeAccountWithRequestBuilder(tenantId: String) -> RequestBuilder<String> {
        var path = "/ehealth/v2/pcc/revokeaccount/{tenantId}"
        let tenantIdPreEscape = "\(tenantId)"
        let tenantIdPostEscape = tenantIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{tenantId}", with: tenantIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}

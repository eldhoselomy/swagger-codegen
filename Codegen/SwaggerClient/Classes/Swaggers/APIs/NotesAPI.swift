//
// CooeyAPIClient
// NotesAPI.swift
//
// Generated by Eldhose Lomy
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class NotesAPI {
    /**

     - parameter xAuthToken: (header)  (optional)
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func create(xAuthToken: String? = nil, body: NoteRequest? = nil, completion: @escaping ((_ data: Note?,_ error: Error?) -> Void)) {
        createWithRequestBuilder(xAuthToken: xAuthToken, body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /ehealth/v2/notes
     - examples: [{contentType=application/json, example={
  "archived" : false,
  "tenantId" : "tenantId",
  "updatedOn" : 6,
  "id" : "id",
  "createdOn" : 0,
  "content" : "content",
  "leadId" : "leadId"
}}]
     
     - parameter xAuthToken: (header)  (optional)
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<Note> 
     */
    open class func createWithRequestBuilder(xAuthToken: String? = nil, body: NoteRequest? = nil) -> RequestBuilder<Note> {
        let path = "/ehealth/v2/notes"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "X-Auth-Token": xAuthToken
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Note>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter xAuthToken: (header)  (optional)
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createNoteForMultipleUsers(xAuthToken: String? = nil, body: BulkNoteRequest? = nil, completion: @escaping ((_ data: [Note]?,_ error: Error?) -> Void)) {
        createNoteForMultipleUsersWithRequestBuilder(xAuthToken: xAuthToken, body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /ehealth/v2/notes/users
     - examples: [{contentType=application/json, example=[ {
  "archived" : false,
  "tenantId" : "tenantId",
  "updatedOn" : 6,
  "id" : "id",
  "createdOn" : 0,
  "content" : "content",
  "leadId" : "leadId"
}, {
  "archived" : false,
  "tenantId" : "tenantId",
  "updatedOn" : 6,
  "id" : "id",
  "createdOn" : 0,
  "content" : "content",
  "leadId" : "leadId"
} ]}]
     
     - parameter xAuthToken: (header)  (optional)
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<[Note]> 
     */
    open class func createNoteForMultipleUsersWithRequestBuilder(xAuthToken: String? = nil, body: BulkNoteRequest? = nil) -> RequestBuilder<[Note]> {
        let path = "/ehealth/v2/notes/users"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "X-Auth-Token": xAuthToken
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[Note]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true, headers: headerParameters)
    }

    /**

     - parameter userId: (path)  
     - parameter xAuthToken: (header)  (optional)
     - parameter caretakerId: (query)  (optional)
     - parameter type: (query)  (optional)
     - parameter beginTime: (query)  (optional, default to 0)
     - parameter endTime: (query)  (optional, default to 0)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getNotes(userId: String, xAuthToken: String? = nil, caretakerId: String? = nil, type: String? = nil, beginTime: Int64? = nil, endTime: Int64? = nil, completion: @escaping ((_ data: [Note]?,_ error: Error?) -> Void)) {
        getNotesWithRequestBuilder(userId: userId, xAuthToken: xAuthToken, caretakerId: caretakerId, type: type, beginTime: beginTime, endTime: endTime).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /ehealth/v2/notes/user/{userId}
     - examples: [{contentType=application/json, example=[ {
  "archived" : false,
  "tenantId" : "tenantId",
  "updatedOn" : 6,
  "id" : "id",
  "createdOn" : 0,
  "content" : "content",
  "leadId" : "leadId"
}, {
  "archived" : false,
  "tenantId" : "tenantId",
  "updatedOn" : 6,
  "id" : "id",
  "createdOn" : 0,
  "content" : "content",
  "leadId" : "leadId"
} ]}]
     
     - parameter userId: (path)  
     - parameter xAuthToken: (header)  (optional)
     - parameter caretakerId: (query)  (optional)
     - parameter type: (query)  (optional)
     - parameter beginTime: (query)  (optional, default to 0)
     - parameter endTime: (query)  (optional, default to 0)

     - returns: RequestBuilder<[Note]> 
     */
    open class func getNotesWithRequestBuilder(userId: String, xAuthToken: String? = nil, caretakerId: String? = nil, type: String? = nil, beginTime: Int64? = nil, endTime: Int64? = nil) -> RequestBuilder<[Note]> {
        var path = "/ehealth/v2/notes/user/{userId}"
        let userIdPreEscape = "\(userId)"
        let userIdPostEscape = userIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{userId}", with: userIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "caretakerId": caretakerId, 
            "type": type, 
            "beginTime": beginTime?.encodeToJSON(), 
            "endTime": endTime?.encodeToJSON()
        ])
        let nillableHeaders: [String: Any?] = [
            "X-Auth-Token": xAuthToken
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[Note]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter noteId: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func note(noteId: String, completion: @escaping ((_ data: Note?,_ error: Error?) -> Void)) {
        noteWithRequestBuilder(noteId: noteId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /ehealth/v2/notes/{noteId}
     - examples: [{contentType=application/json, example={
  "archived" : false,
  "tenantId" : "tenantId",
  "updatedOn" : 6,
  "id" : "id",
  "createdOn" : 0,
  "content" : "content",
  "leadId" : "leadId"
}}]
     
     - parameter noteId: (path)  

     - returns: RequestBuilder<Note> 
     */
    open class func noteWithRequestBuilder(noteId: String) -> RequestBuilder<Note> {
        var path = "/ehealth/v2/notes/{noteId}"
        let noteIdPreEscape = "\(noteId)"
        let noteIdPostEscape = noteIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{noteId}", with: noteIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Note>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter noteId: (path)  
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func updateNoteContent(noteId: String, body: NoteRequest? = nil, completion: @escaping ((_ data: Bool?,_ error: Error?) -> Void)) {
        updateNoteContentWithRequestBuilder(noteId: noteId, body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - PUT /ehealth/v2/notes/{noteId}
     - examples: [{contentType=application/json, example=true}]
     
     - parameter noteId: (path)  
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<Bool> 
     */
    open class func updateNoteContentWithRequestBuilder(noteId: String, body: NoteRequest? = nil) -> RequestBuilder<Bool> {
        var path = "/ehealth/v2/notes/{noteId}"
        let noteIdPreEscape = "\(noteId)"
        let noteIdPostEscape = noteIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{noteId}", with: noteIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Bool>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}

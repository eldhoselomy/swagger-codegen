//
// CooeyAPIClient
// MediaAPI.swift
//
// Generated by Eldhose Lomy
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class MediaAPI {
    /**

     - parameter mediaId: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getMedia(mediaId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        getMediaWithRequestBuilder(mediaId: mediaId).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - GET /ehealth/v2/media/{mediaId}
     
     - parameter mediaId: (path)  

     - returns: RequestBuilder<Void> 
     */
    open class func getMediaWithRequestBuilder(mediaId: String) -> RequestBuilder<Void> {
        var path = "/ehealth/v2/media/{mediaId}"
        let mediaIdPreEscape = "\(mediaId)"
        let mediaIdPostEscape = mediaIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{mediaId}", with: mediaIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter fileName: (path)  
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func uploadFile(fileName: String, body: InputStream? = nil, completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        uploadFileWithRequestBuilder(fileName: fileName, body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /ehealth/v2/media/upload/{fileName}
     - examples: [{output=none}]
     
     - parameter fileName: (path)  
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<String> 
     */
    open class func uploadFileWithRequestBuilder(fileName: String, body: InputStream? = nil) -> RequestBuilder<String> {
        var path = "/ehealth/v2/media/upload/{fileName}"
        let fileNamePreEscape = "\(fileName)"
        let fileNamePostEscape = fileNamePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{fileName}", with: fileNamePostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}

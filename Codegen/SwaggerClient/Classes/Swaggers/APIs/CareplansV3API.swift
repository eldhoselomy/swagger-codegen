//
// CooeyAPIClient
// CareplansV3API.swift
//
// Generated by Eldhose Lomy
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class CareplansV3API {
    /**

     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func assignCareplan(body: CareplanAssignmentRequestDTO? = nil, completion: @escaping ((_ data: CareplanAssignmentResponseDTO?,_ error: Error?) -> Void)) {
        assignCareplanWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /ehealth/v3/careplans
     - examples: [{contentType=application/json, example={
  "interventions" : [ {
    "patientId" : "patientId",
    "type" : "type",
    "createdOn" : 0,
    "archived" : false,
    "reviewResponseEnabled" : false,
    "caretakerId" : "caretakerId",
    "permissions" : "permissions",
    "schedules" : [ {
      "endDate" : 9,
      "occuranceStartTime" : "occuranceStartTime",
      "occuranceEndTime" : "occuranceEndTime",
      "externalId" : "externalId",
      "active" : false,
      "repeatedEvent" : false,
      "updatedOn" : 5,
      "createdOn" : 4,
      "scheduleFor" : "CAREPLAN",
      "archived" : false,
      "allDayEvent" : false,
      "attendeesList" : [ "attendeesList", "attendeesList" ],
      "repeat" : {
        "summary" : "summary",
        "occuranceType" : "NO_OF_DAYS",
        "occurances" : "occurances",
        "type" : "DAILY",
        "repeatOn" : {
          "sunday" : false,
          "saturday" : false,
          "tuesday" : false,
          "wednesday" : false,
          "thursday" : false,
          "friday" : false,
          "monday" : false
        },
        "startDate" : 8,
        "frequency" : 6
      },
      "tenantId" : "tenantId",
      "name" : "name",
      "id" : "id",
      "applicationId" : "applicationId",
      "startDate" : 9,
      "assignerId" : "assignerId"
    }, {
      "endDate" : 9,
      "occuranceStartTime" : "occuranceStartTime",
      "occuranceEndTime" : "occuranceEndTime",
      "externalId" : "externalId",
      "active" : false,
      "repeatedEvent" : false,
      "updatedOn" : 5,
      "createdOn" : 4,
      "scheduleFor" : "CAREPLAN",
      "archived" : false,
      "allDayEvent" : false,
      "attendeesList" : [ "attendeesList", "attendeesList" ],
      "repeat" : {
        "summary" : "summary",
        "occuranceType" : "NO_OF_DAYS",
        "occurances" : "occurances",
        "type" : "DAILY",
        "repeatOn" : {
          "sunday" : false,
          "saturday" : false,
          "tuesday" : false,
          "wednesday" : false,
          "thursday" : false,
          "friday" : false,
          "monday" : false
        },
        "startDate" : 8,
        "frequency" : 6
      },
      "tenantId" : "tenantId",
      "name" : "name",
      "id" : "id",
      "applicationId" : "applicationId",
      "startDate" : 9,
      "assignerId" : "assignerId"
    } ],
    "patientNotificationEnabled" : false,
    "id" : "id",
    "careplanId" : "careplanId",
    "guaridanNotificationEnabled" : false,
    "interventionBluprintId" : "interventionBluprintId",
    "caretakerNotificationEnabled" : false,
    "caretakerName" : "caretakerName",
    "externalId" : "externalId",
    "active" : false,
    "assignedOn" : 1,
    "updatedOn" : 6,
    "parentId" : "parentId",
    "schedule" : {
      "numOfDays" : 1,
      "timings" : {
        "key" : "timings"
      },
      "beginTime" : 6,
      "endTime" : 7
    },
    "tenantId" : "tenantId",
    "name" : "name",
    "applicationId" : "applicationId",
    "parameters" : "parameters"
  }, {
    "patientId" : "patientId",
    "type" : "type",
    "createdOn" : 0,
    "archived" : false,
    "reviewResponseEnabled" : false,
    "caretakerId" : "caretakerId",
    "permissions" : "permissions",
    "schedules" : [ {
      "endDate" : 9,
      "occuranceStartTime" : "occuranceStartTime",
      "occuranceEndTime" : "occuranceEndTime",
      "externalId" : "externalId",
      "active" : false,
      "repeatedEvent" : false,
      "updatedOn" : 5,
      "createdOn" : 4,
      "scheduleFor" : "CAREPLAN",
      "archived" : false,
      "allDayEvent" : false,
      "attendeesList" : [ "attendeesList", "attendeesList" ],
      "repeat" : {
        "summary" : "summary",
        "occuranceType" : "NO_OF_DAYS",
        "occurances" : "occurances",
        "type" : "DAILY",
        "repeatOn" : {
          "sunday" : false,
          "saturday" : false,
          "tuesday" : false,
          "wednesday" : false,
          "thursday" : false,
          "friday" : false,
          "monday" : false
        },
        "startDate" : 8,
        "frequency" : 6
      },
      "tenantId" : "tenantId",
      "name" : "name",
      "id" : "id",
      "applicationId" : "applicationId",
      "startDate" : 9,
      "assignerId" : "assignerId"
    }, {
      "endDate" : 9,
      "occuranceStartTime" : "occuranceStartTime",
      "occuranceEndTime" : "occuranceEndTime",
      "externalId" : "externalId",
      "active" : false,
      "repeatedEvent" : false,
      "updatedOn" : 5,
      "createdOn" : 4,
      "scheduleFor" : "CAREPLAN",
      "archived" : false,
      "allDayEvent" : false,
      "attendeesList" : [ "attendeesList", "attendeesList" ],
      "repeat" : {
        "summary" : "summary",
        "occuranceType" : "NO_OF_DAYS",
        "occurances" : "occurances",
        "type" : "DAILY",
        "repeatOn" : {
          "sunday" : false,
          "saturday" : false,
          "tuesday" : false,
          "wednesday" : false,
          "thursday" : false,
          "friday" : false,
          "monday" : false
        },
        "startDate" : 8,
        "frequency" : 6
      },
      "tenantId" : "tenantId",
      "name" : "name",
      "id" : "id",
      "applicationId" : "applicationId",
      "startDate" : 9,
      "assignerId" : "assignerId"
    } ],
    "patientNotificationEnabled" : false,
    "id" : "id",
    "careplanId" : "careplanId",
    "guaridanNotificationEnabled" : false,
    "interventionBluprintId" : "interventionBluprintId",
    "caretakerNotificationEnabled" : false,
    "caretakerName" : "caretakerName",
    "externalId" : "externalId",
    "active" : false,
    "assignedOn" : 1,
    "updatedOn" : 6,
    "parentId" : "parentId",
    "schedule" : {
      "numOfDays" : 1,
      "timings" : {
        "key" : "timings"
      },
      "beginTime" : 6,
      "endTime" : 7
    },
    "tenantId" : "tenantId",
    "name" : "name",
    "applicationId" : "applicationId",
    "parameters" : "parameters"
  } ],
  "careplan" : {
    "patientId" : "patientId",
    "endDate" : "2000-01-23",
    "description" : "description",
    "levelOfAssistance" : "levelOfAssistance",
    "diagnosisForm" : {
      "ownerType" : "TENANT",
      "formHeader" : {
        "headerLogo" : "headerLogo",
        "headerTitle" : "headerTitle"
      },
      "externalId" : "externalId",
      "active" : false,
      "assignedOn" : 2,
      "updatedOn" : 5,
      "completed" : false,
      "ownerId" : "ownerId",
      "type" : "type",
      "createdOn" : 1,
      "assigneeId" : "assigneeId",
      "tags" : [ "tags", "tags" ],
      "archived" : false,
      "percentageComplete" : 5.637376656633329,
      "completedOn" : 7,
      "tenantId" : "tenantId",
      "name" : "name",
      "id" : "id",
      "applicationId" : "applicationId",
      "sectionList" : [ {
        "formId" : "formId",
        "fieldInputs" : {
          "fieldComponent" : [ {
            "template" : "{}",
            "archived" : false,
            "contextGraphEnabled" : false,
            "tenantId" : "tenantId",
            "externalId" : "externalId",
            "active" : false,
            "updatedOn" : 1,
            "applicationId" : "applicationId",
            "title" : "title",
            "type" : "type",
            "createdOn" : 7,
            "mandatory" : false
          }, {
            "template" : "{}",
            "archived" : false,
            "contextGraphEnabled" : false,
            "tenantId" : "tenantId",
            "externalId" : "externalId",
            "active" : false,
            "updatedOn" : 1,
            "applicationId" : "applicationId",
            "title" : "title",
            "type" : "type",
            "createdOn" : 7,
            "mandatory" : false
          } ]
        },
        "sectionMode" : "CASCADING",
        "sectionDescription" : "sectionDescription",
        "sectionHeading" : "sectionHeading"
      }, {
        "formId" : "formId",
        "fieldInputs" : {
          "fieldComponent" : [ {
            "template" : "{}",
            "archived" : false,
            "contextGraphEnabled" : false,
            "tenantId" : "tenantId",
            "externalId" : "externalId",
            "active" : false,
            "updatedOn" : 1,
            "applicationId" : "applicationId",
            "title" : "title",
            "type" : "type",
            "createdOn" : 7,
            "mandatory" : false
          }, {
            "template" : "{}",
            "archived" : false,
            "contextGraphEnabled" : false,
            "tenantId" : "tenantId",
            "externalId" : "externalId",
            "active" : false,
            "updatedOn" : 1,
            "applicationId" : "applicationId",
            "title" : "title",
            "type" : "type",
            "createdOn" : 7,
            "mandatory" : false
          } ]
        },
        "sectionMode" : "CASCADING",
        "sectionDescription" : "sectionDescription",
        "sectionHeading" : "sectionHeading"
      } ],
      "formFooter" : {
        "vendorSignatureTile" : "vendorSignatureTile",
        "consumerSignatureTitle" : "consumerSignatureTitle"
      },
      "assignerId" : "assignerId"
    },
    "historyForm" : {
      "ownerType" : "TENANT",
      "formHeader" : {
        "headerLogo" : "headerLogo",
        "headerTitle" : "headerTitle"
      },
      "externalId" : "externalId",
      "active" : false,
      "assignedOn" : 2,
      "updatedOn" : 5,
      "completed" : false,
      "ownerId" : "ownerId",
      "type" : "type",
      "createdOn" : 1,
      "assigneeId" : "assigneeId",
      "tags" : [ "tags", "tags" ],
      "archived" : false,
      "percentageComplete" : 5.637376656633329,
      "completedOn" : 7,
      "tenantId" : "tenantId",
      "name" : "name",
      "id" : "id",
      "applicationId" : "applicationId",
      "sectionList" : [ {
        "formId" : "formId",
        "fieldInputs" : {
          "fieldComponent" : [ {
            "template" : "{}",
            "archived" : false,
            "contextGraphEnabled" : false,
            "tenantId" : "tenantId",
            "externalId" : "externalId",
            "active" : false,
            "updatedOn" : 1,
            "applicationId" : "applicationId",
            "title" : "title",
            "type" : "type",
            "createdOn" : 7,
            "mandatory" : false
          }, {
            "template" : "{}",
            "archived" : false,
            "contextGraphEnabled" : false,
            "tenantId" : "tenantId",
            "externalId" : "externalId",
            "active" : false,
            "updatedOn" : 1,
            "applicationId" : "applicationId",
            "title" : "title",
            "type" : "type",
            "createdOn" : 7,
            "mandatory" : false
          } ]
        },
        "sectionMode" : "CASCADING",
        "sectionDescription" : "sectionDescription",
        "sectionHeading" : "sectionHeading"
      }, {
        "formId" : "formId",
        "fieldInputs" : {
          "fieldComponent" : [ {
            "template" : "{}",
            "archived" : false,
            "contextGraphEnabled" : false,
            "tenantId" : "tenantId",
            "externalId" : "externalId",
            "active" : false,
            "updatedOn" : 1,
            "applicationId" : "applicationId",
            "title" : "title",
            "type" : "type",
            "createdOn" : 7,
            "mandatory" : false
          }, {
            "template" : "{}",
            "archived" : false,
            "contextGraphEnabled" : false,
            "tenantId" : "tenantId",
            "externalId" : "externalId",
            "active" : false,
            "updatedOn" : 1,
            "applicationId" : "applicationId",
            "title" : "title",
            "type" : "type",
            "createdOn" : 7,
            "mandatory" : false
          } ]
        },
        "sectionMode" : "CASCADING",
        "sectionDescription" : "sectionDescription",
        "sectionHeading" : "sectionHeading"
      } ],
      "formFooter" : {
        "vendorSignatureTile" : "vendorSignatureTile",
        "consumerSignatureTitle" : "consumerSignatureTitle"
      },
      "assignerId" : "assignerId"
    },
    "episodeId" : "episodeId",
    "type" : "REMOTE_PATIENT_MONITORING",
    "createdOn" : 0,
    "enabled" : false,
    "evaluation" : "evaluation",
    "archived" : false,
    "assessment" : {
      "signature" : "signature"
    },
    "numOfDays" : 6,
    "careplanBluprintId" : "careplanBluprintId",
    "id" : "id",
    "beginTime" : 3,
    "evaluationForm" : {
      "ownerType" : "TENANT",
      "formHeader" : {
        "headerLogo" : "headerLogo",
        "headerTitle" : "headerTitle"
      },
      "externalId" : "externalId",
      "active" : false,
      "assignedOn" : 2,
      "updatedOn" : 5,
      "completed" : false,
      "ownerId" : "ownerId",
      "type" : "type",
      "createdOn" : 1,
      "assigneeId" : "assigneeId",
      "tags" : [ "tags", "tags" ],
      "archived" : false,
      "percentageComplete" : 5.637376656633329,
      "completedOn" : 7,
      "tenantId" : "tenantId",
      "name" : "name",
      "id" : "id",
      "applicationId" : "applicationId",
      "sectionList" : [ {
        "formId" : "formId",
        "fieldInputs" : {
          "fieldComponent" : [ {
            "template" : "{}",
            "archived" : false,
            "contextGraphEnabled" : false,
            "tenantId" : "tenantId",
            "externalId" : "externalId",
            "active" : false,
            "updatedOn" : 1,
            "applicationId" : "applicationId",
            "title" : "title",
            "type" : "type",
            "createdOn" : 7,
            "mandatory" : false
          }, {
            "template" : "{}",
            "archived" : false,
            "contextGraphEnabled" : false,
            "tenantId" : "tenantId",
            "externalId" : "externalId",
            "active" : false,
            "updatedOn" : 1,
            "applicationId" : "applicationId",
            "title" : "title",
            "type" : "type",
            "createdOn" : 7,
            "mandatory" : false
          } ]
        },
        "sectionMode" : "CASCADING",
        "sectionDescription" : "sectionDescription",
        "sectionHeading" : "sectionHeading"
      }, {
        "formId" : "formId",
        "fieldInputs" : {
          "fieldComponent" : [ {
            "template" : "{}",
            "archived" : false,
            "contextGraphEnabled" : false,
            "tenantId" : "tenantId",
            "externalId" : "externalId",
            "active" : false,
            "updatedOn" : 1,
            "applicationId" : "applicationId",
            "title" : "title",
            "type" : "type",
            "createdOn" : 7,
            "mandatory" : false
          }, {
            "template" : "{}",
            "archived" : false,
            "contextGraphEnabled" : false,
            "tenantId" : "tenantId",
            "externalId" : "externalId",
            "active" : false,
            "updatedOn" : 1,
            "applicationId" : "applicationId",
            "title" : "title",
            "type" : "type",
            "createdOn" : 7,
            "mandatory" : false
          } ]
        },
        "sectionMode" : "CASCADING",
        "sectionDescription" : "sectionDescription",
        "sectionHeading" : "sectionHeading"
      } ],
      "formFooter" : {
        "vendorSignatureTile" : "vendorSignatureTile",
        "consumerSignatureTitle" : "consumerSignatureTitle"
      },
      "assignerId" : "assignerId"
    },
    "trackable" : false,
    "assignerName" : "assignerName",
    "goal" : "goal",
    "userMedicines" : [ {
      "reminders" : [ {
        "activeDays" : [ true, true ],
        "timeOfDay" : "timeOfDay"
      }, {
        "activeDays" : [ true, true ],
        "timeOfDay" : "timeOfDay"
      } ],
      "sourceId" : "sourceId",
      "notes" : "notes",
      "color" : "color",
      "reasonToDiscontinue" : "reasonToDiscontinue",
      "scheduled" : false,
      "dosages" : [ {
        "schedule" : {
          "endDate" : 9,
          "occuranceStartTime" : "occuranceStartTime",
          "occuranceEndTime" : "occuranceEndTime",
          "externalId" : "externalId",
          "active" : false,
          "repeatedEvent" : false,
          "updatedOn" : 5,
          "createdOn" : 4,
          "scheduleFor" : "CAREPLAN",
          "archived" : false,
          "allDayEvent" : false,
          "attendeesList" : [ "attendeesList", "attendeesList" ],
          "repeat" : {
            "summary" : "summary",
            "occuranceType" : "NO_OF_DAYS",
            "occurances" : "occurances",
            "type" : "DAILY",
            "repeatOn" : {
              "sunday" : false,
              "saturday" : false,
              "tuesday" : false,
              "wednesday" : false,
              "thursday" : false,
              "friday" : false,
              "monday" : false
            },
            "startDate" : 8,
            "frequency" : 6
          },
          "tenantId" : "tenantId",
          "name" : "name",
          "id" : "id",
          "applicationId" : "applicationId",
          "startDate" : 9,
          "assignerId" : "assignerId"
        },
        "unit" : "unit",
        "quantity" : "quantity",
        "type" : "TABLET"
      }, {
        "schedule" : {
          "endDate" : 9,
          "occuranceStartTime" : "occuranceStartTime",
          "occuranceEndTime" : "occuranceEndTime",
          "externalId" : "externalId",
          "active" : false,
          "repeatedEvent" : false,
          "updatedOn" : 5,
          "createdOn" : 4,
          "scheduleFor" : "CAREPLAN",
          "archived" : false,
          "allDayEvent" : false,
          "attendeesList" : [ "attendeesList", "attendeesList" ],
          "repeat" : {
            "summary" : "summary",
            "occuranceType" : "NO_OF_DAYS",
            "occurances" : "occurances",
            "type" : "DAILY",
            "repeatOn" : {
              "sunday" : false,
              "saturday" : false,
              "tuesday" : false,
              "wednesday" : false,
              "thursday" : false,
              "friday" : false,
              "monday" : false
            },
            "startDate" : 8,
            "frequency" : 6
          },
          "tenantId" : "tenantId",
          "name" : "name",
          "id" : "id",
          "applicationId" : "applicationId",
          "startDate" : 9,
          "assignerId" : "assignerId"
        },
        "unit" : "unit",
        "quantity" : "quantity",
        "type" : "TABLET"
      } ],
      "description" : "description",
      "source" : "CAREPLAN",
      "createdOn" : 4,
      "archived" : false,
      "permissions" : "permissions",
      "id" : "id",
      "careplanId" : "careplanId",
      "shape" : "shape",
      "discontinuedOn" : 1,
      "medicineId" : "medicineId",
      "externalId" : "externalId",
      "active" : false,
      "updatedOn" : 7,
      "discontinuedBy" : "discontinuedBy",
      "userId" : "userId",
      "prn" : false,
      "addedOn" : 1,
      "instruction" : "instruction",
      "tenantId" : "tenantId",
      "name" : "name",
      "toBeTakenTill" : 1,
      "applicationId" : "applicationId",
      "interventionId" : "interventionId",
      "assignerId" : "assignerId",
      "status" : "ACTIVE"
    }, {
      "reminders" : [ {
        "activeDays" : [ true, true ],
        "timeOfDay" : "timeOfDay"
      }, {
        "activeDays" : [ true, true ],
        "timeOfDay" : "timeOfDay"
      } ],
      "sourceId" : "sourceId",
      "notes" : "notes",
      "color" : "color",
      "reasonToDiscontinue" : "reasonToDiscontinue",
      "scheduled" : false,
      "dosages" : [ {
        "schedule" : {
          "endDate" : 9,
          "occuranceStartTime" : "occuranceStartTime",
          "occuranceEndTime" : "occuranceEndTime",
          "externalId" : "externalId",
          "active" : false,
          "repeatedEvent" : false,
          "updatedOn" : 5,
          "createdOn" : 4,
          "scheduleFor" : "CAREPLAN",
          "archived" : false,
          "allDayEvent" : false,
          "attendeesList" : [ "attendeesList", "attendeesList" ],
          "repeat" : {
            "summary" : "summary",
            "occuranceType" : "NO_OF_DAYS",
            "occurances" : "occurances",
            "type" : "DAILY",
            "repeatOn" : {
              "sunday" : false,
              "saturday" : false,
              "tuesday" : false,
              "wednesday" : false,
              "thursday" : false,
              "friday" : false,
              "monday" : false
            },
            "startDate" : 8,
            "frequency" : 6
          },
          "tenantId" : "tenantId",
          "name" : "name",
          "id" : "id",
          "applicationId" : "applicationId",
          "startDate" : 9,
          "assignerId" : "assignerId"
        },
        "unit" : "unit",
        "quantity" : "quantity",
        "type" : "TABLET"
      }, {
        "schedule" : {
          "endDate" : 9,
          "occuranceStartTime" : "occuranceStartTime",
          "occuranceEndTime" : "occuranceEndTime",
          "externalId" : "externalId",
          "active" : false,
          "repeatedEvent" : false,
          "updatedOn" : 5,
          "createdOn" : 4,
          "scheduleFor" : "CAREPLAN",
          "archived" : false,
          "allDayEvent" : false,
          "attendeesList" : [ "attendeesList", "attendeesList" ],
          "repeat" : {
            "summary" : "summary",
            "occuranceType" : "NO_OF_DAYS",
            "occurances" : "occurances",
            "type" : "DAILY",
            "repeatOn" : {
              "sunday" : false,
              "saturday" : false,
              "tuesday" : false,
              "wednesday" : false,
              "thursday" : false,
              "friday" : false,
              "monday" : false
            },
            "startDate" : 8,
            "frequency" : 6
          },
          "tenantId" : "tenantId",
          "name" : "name",
          "id" : "id",
          "applicationId" : "applicationId",
          "startDate" : 9,
          "assignerId" : "assignerId"
        },
        "unit" : "unit",
        "quantity" : "quantity",
        "type" : "TABLET"
      } ],
      "description" : "description",
      "source" : "CAREPLAN",
      "createdOn" : 4,
      "archived" : false,
      "permissions" : "permissions",
      "id" : "id",
      "careplanId" : "careplanId",
      "shape" : "shape",
      "discontinuedOn" : 1,
      "medicineId" : "medicineId",
      "externalId" : "externalId",
      "active" : false,
      "updatedOn" : 7,
      "discontinuedBy" : "discontinuedBy",
      "userId" : "userId",
      "prn" : false,
      "addedOn" : 1,
      "instruction" : "instruction",
      "tenantId" : "tenantId",
      "name" : "name",
      "toBeTakenTill" : 1,
      "applicationId" : "applicationId",
      "interventionId" : "interventionId",
      "assignerId" : "assignerId",
      "status" : "ACTIVE"
    } ],
    "externalId" : "externalId",
    "active" : false,
    "diagnosis" : {
      "healthCondition" : "healthCondition",
      "symoptoms" : "symoptoms"
    },
    "assignedOn" : 9,
    "noteId" : "noteId",
    "updatedOn" : 6,
    "history" : "history",
    "tags" : [ "tags", "tags" ],
    "assessmentForm" : {
      "ownerType" : "TENANT",
      "formHeader" : {
        "headerLogo" : "headerLogo",
        "headerTitle" : "headerTitle"
      },
      "externalId" : "externalId",
      "active" : false,
      "assignedOn" : 2,
      "updatedOn" : 5,
      "completed" : false,
      "ownerId" : "ownerId",
      "type" : "type",
      "createdOn" : 1,
      "assigneeId" : "assigneeId",
      "tags" : [ "tags", "tags" ],
      "archived" : false,
      "percentageComplete" : 5.637376656633329,
      "completedOn" : 7,
      "tenantId" : "tenantId",
      "name" : "name",
      "id" : "id",
      "applicationId" : "applicationId",
      "sectionList" : [ {
        "formId" : "formId",
        "fieldInputs" : {
          "fieldComponent" : [ {
            "template" : "{}",
            "archived" : false,
            "contextGraphEnabled" : false,
            "tenantId" : "tenantId",
            "externalId" : "externalId",
            "active" : false,
            "updatedOn" : 1,
            "applicationId" : "applicationId",
            "title" : "title",
            "type" : "type",
            "createdOn" : 7,
            "mandatory" : false
          }, {
            "template" : "{}",
            "archived" : false,
            "contextGraphEnabled" : false,
            "tenantId" : "tenantId",
            "externalId" : "externalId",
            "active" : false,
            "updatedOn" : 1,
            "applicationId" : "applicationId",
            "title" : "title",
            "type" : "type",
            "createdOn" : 7,
            "mandatory" : false
          } ]
        },
        "sectionMode" : "CASCADING",
        "sectionDescription" : "sectionDescription",
        "sectionHeading" : "sectionHeading"
      }, {
        "formId" : "formId",
        "fieldInputs" : {
          "fieldComponent" : [ {
            "template" : "{}",
            "archived" : false,
            "contextGraphEnabled" : false,
            "tenantId" : "tenantId",
            "externalId" : "externalId",
            "active" : false,
            "updatedOn" : 1,
            "applicationId" : "applicationId",
            "title" : "title",
            "type" : "type",
            "createdOn" : 7,
            "mandatory" : false
          }, {
            "template" : "{}",
            "archived" : false,
            "contextGraphEnabled" : false,
            "tenantId" : "tenantId",
            "externalId" : "externalId",
            "active" : false,
            "updatedOn" : 1,
            "applicationId" : "applicationId",
            "title" : "title",
            "type" : "type",
            "createdOn" : 7,
            "mandatory" : false
          } ]
        },
        "sectionMode" : "CASCADING",
        "sectionDescription" : "sectionDescription",
        "sectionHeading" : "sectionHeading"
      } ],
      "formFooter" : {
        "vendorSignatureTile" : "vendorSignatureTile",
        "consumerSignatureTitle" : "consumerSignatureTitle"
      },
      "assignerId" : "assignerId"
    },
    "goalForm" : {
      "ownerType" : "TENANT",
      "formHeader" : {
        "headerLogo" : "headerLogo",
        "headerTitle" : "headerTitle"
      },
      "externalId" : "externalId",
      "active" : false,
      "assignedOn" : 2,
      "updatedOn" : 5,
      "completed" : false,
      "ownerId" : "ownerId",
      "type" : "type",
      "createdOn" : 1,
      "assigneeId" : "assigneeId",
      "tags" : [ "tags", "tags" ],
      "archived" : false,
      "percentageComplete" : 5.637376656633329,
      "completedOn" : 7,
      "tenantId" : "tenantId",
      "name" : "name",
      "id" : "id",
      "applicationId" : "applicationId",
      "sectionList" : [ {
        "formId" : "formId",
        "fieldInputs" : {
          "fieldComponent" : [ {
            "template" : "{}",
            "archived" : false,
            "contextGraphEnabled" : false,
            "tenantId" : "tenantId",
            "externalId" : "externalId",
            "active" : false,
            "updatedOn" : 1,
            "applicationId" : "applicationId",
            "title" : "title",
            "type" : "type",
            "createdOn" : 7,
            "mandatory" : false
          }, {
            "template" : "{}",
            "archived" : false,
            "contextGraphEnabled" : false,
            "tenantId" : "tenantId",
            "externalId" : "externalId",
            "active" : false,
            "updatedOn" : 1,
            "applicationId" : "applicationId",
            "title" : "title",
            "type" : "type",
            "createdOn" : 7,
            "mandatory" : false
          } ]
        },
        "sectionMode" : "CASCADING",
        "sectionDescription" : "sectionDescription",
        "sectionHeading" : "sectionHeading"
      }, {
        "formId" : "formId",
        "fieldInputs" : {
          "fieldComponent" : [ {
            "template" : "{}",
            "archived" : false,
            "contextGraphEnabled" : false,
            "tenantId" : "tenantId",
            "externalId" : "externalId",
            "active" : false,
            "updatedOn" : 1,
            "applicationId" : "applicationId",
            "title" : "title",
            "type" : "type",
            "createdOn" : 7,
            "mandatory" : false
          }, {
            "template" : "{}",
            "archived" : false,
            "contextGraphEnabled" : false,
            "tenantId" : "tenantId",
            "externalId" : "externalId",
            "active" : false,
            "updatedOn" : 1,
            "applicationId" : "applicationId",
            "title" : "title",
            "type" : "type",
            "createdOn" : 7,
            "mandatory" : false
          } ]
        },
        "sectionMode" : "CASCADING",
        "sectionDescription" : "sectionDescription",
        "sectionHeading" : "sectionHeading"
      } ],
      "formFooter" : {
        "vendorSignatureTile" : "vendorSignatureTile",
        "consumerSignatureTitle" : "consumerSignatureTitle"
      },
      "assignerId" : "assignerId"
    },
    "tenantId" : "tenantId",
    "name" : "name",
    "endTime" : 2,
    "applicationId" : "applicationId",
    "startDate" : "2000-01-23",
    "assignerId" : "assignerId",
    "careplanStatus" : "COMPLETED"
  }
}}]
     
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<CareplanAssignmentResponseDTO> 
     */
    open class func assignCareplanWithRequestBuilder(body: CareplanAssignmentRequestDTO? = nil) -> RequestBuilder<CareplanAssignmentResponseDTO> {
        let path = "/ehealth/v3/careplans"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<CareplanAssignmentResponseDTO>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**

     - parameter careplanId: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func retrieveCareplanById(careplanId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        retrieveCareplanByIdWithRequestBuilder(careplanId: careplanId).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - GET /ehealth/v3/careplans/{careplanId}
     
     - parameter careplanId: (path)  

     - returns: RequestBuilder<Void> 
     */
    open class func retrieveCareplanByIdWithRequestBuilder(careplanId: String) -> RequestBuilder<Void> {
        var path = "/ehealth/v3/careplans/{careplanId}"
        let careplanIdPreEscape = "\(careplanId)"
        let careplanIdPostEscape = careplanIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{careplanId}", with: careplanIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter careplanId: (path)  
     - parameter interventionId: (path)  
     - parameter tenantId: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func retrieveInterventionById(careplanId: String, interventionId: String, tenantId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        retrieveInterventionByIdWithRequestBuilder(careplanId: careplanId, interventionId: interventionId, tenantId: tenantId).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - GET /ehealth/v3/careplans/{careplanId}/interventions/{interventionId}/tenants/{tenantId}
     
     - parameter careplanId: (path)  
     - parameter interventionId: (path)  
     - parameter tenantId: (path)  

     - returns: RequestBuilder<Void> 
     */
    open class func retrieveInterventionByIdWithRequestBuilder(careplanId: String, interventionId: String, tenantId: String) -> RequestBuilder<Void> {
        var path = "/ehealth/v3/careplans/{careplanId}/interventions/{interventionId}/tenants/{tenantId}"
        let careplanIdPreEscape = "\(careplanId)"
        let careplanIdPostEscape = careplanIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{careplanId}", with: careplanIdPostEscape, options: .literal, range: nil)
        let interventionIdPreEscape = "\(interventionId)"
        let interventionIdPostEscape = interventionIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{interventionId}", with: interventionIdPostEscape, options: .literal, range: nil)
        let tenantIdPreEscape = "\(tenantId)"
        let tenantIdPostEscape = tenantIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{tenantId}", with: tenantIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter userId: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func suspendAllPatientCareplans(userId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        suspendAllPatientCareplansWithRequestBuilder(userId: userId).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - PUT /ehealth/v3/careplans/users/{userId}/status/suspension
     
     - parameter userId: (path)  

     - returns: RequestBuilder<Void> 
     */
    open class func suspendAllPatientCareplansWithRequestBuilder(userId: String) -> RequestBuilder<Void> {
        var path = "/ehealth/v3/careplans/users/{userId}/status/suspension"
        let userIdPreEscape = "\(userId)"
        let userIdPostEscape = userIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{userId}", with: userIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter careplanId: (path)  
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func updateCareplan(careplanId: String, body: CareplanUpdateRequestDTO? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        updateCareplanWithRequestBuilder(careplanId: careplanId, body: body).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - PUT /ehealth/v3/careplans/{careplanId}
     
     - parameter careplanId: (path)  
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func updateCareplanWithRequestBuilder(careplanId: String, body: CareplanUpdateRequestDTO? = nil) -> RequestBuilder<Void> {
        var path = "/ehealth/v3/careplans/{careplanId}"
        let careplanIdPreEscape = "\(careplanId)"
        let careplanIdPostEscape = careplanIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{careplanId}", with: careplanIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**

     - parameter careplanId: (path)  
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func updateCareplanStatus(careplanId: String, body: CareplanStatusChange? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        updateCareplanStatusWithRequestBuilder(careplanId: careplanId, body: body).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - PUT /ehealth/v3/careplans/{careplanId}/status
     
     - parameter careplanId: (path)  
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func updateCareplanStatusWithRequestBuilder(careplanId: String, body: CareplanStatusChange? = nil) -> RequestBuilder<Void> {
        var path = "/ehealth/v3/careplans/{careplanId}/status"
        let careplanIdPreEscape = "\(careplanId)"
        let careplanIdPostEscape = careplanIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{careplanId}", with: careplanIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}

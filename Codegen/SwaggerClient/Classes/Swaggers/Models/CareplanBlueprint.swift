//
// CooeyAPIClient
// CareplanBlueprint.swift
//
// Generated by Eldhose Lomy
// https://github.com/eldhoselomy/swagger-codegen
//

import Foundation



public struct CareplanBlueprint: Codable {

    public enum ModelType: String, Codable { 
        case remotePatientMonitoring = "REMOTE_PATIENT_MONITORING"
        case chronicCareManagement = "CHRONIC_CARE_MANAGEMENT"
        case _default = "DEFAULT"
    }
    public var createdOn: Int64?
    public var updatedOn: Int64?
    public var tenantId: String?
    public var applicationId: String?
    public var archived: Bool?
    public var externalId: String?
    public var active: Bool?
    public var id: String?
    public var name: String?
    public var _description: String?
    public var type: ModelType?
    public var goal: String?
    public var evaluation: String?
    public var tags: [String]?
    public var numOfDays: Int?
    public var assesmentFormId: String?
    public var diagnosisFormId: String?
    public var goalFormBlueprint: FormBluePrint?
    public var evaluationFormBlueprint: FormBluePrint?
    public var assessmentFormBlueprint: FormBluePrint?
    public var diagnosisFormBlueprint: FormBluePrint?
    public var enabled: Bool?
    public var trackable: Bool?

    public init() {
    }

    public init(createdOn: Int64?, updatedOn: Int64?, tenantId: String?, applicationId: String?, archived: Bool?, externalId: String?, active: Bool?, id: String?, name: String?, _description: String?, type: ModelType?, goal: String?, evaluation: String?, tags: [String]?, numOfDays: Int?, assesmentFormId: String?, diagnosisFormId: String?, goalFormBlueprint: FormBluePrint?, evaluationFormBlueprint: FormBluePrint?, assessmentFormBlueprint: FormBluePrint?, diagnosisFormBlueprint: FormBluePrint?, enabled: Bool?, trackable: Bool?) {
        self.createdOn = createdOn
        self.updatedOn = updatedOn
        self.tenantId = tenantId
        self.applicationId = applicationId
        self.archived = archived
        self.externalId = externalId
        self.active = active
        self.id = id
        self.name = name
        self._description = _description
        self.type = type
        self.goal = goal
        self.evaluation = evaluation
        self.tags = tags
        self.numOfDays = numOfDays
        self.assesmentFormId = assesmentFormId
        self.diagnosisFormId = diagnosisFormId
        self.goalFormBlueprint = goalFormBlueprint
        self.evaluationFormBlueprint = evaluationFormBlueprint
        self.assessmentFormBlueprint = assessmentFormBlueprint
        self.diagnosisFormBlueprint = diagnosisFormBlueprint
        self.enabled = enabled
        self.trackable = trackable
    }

    public enum CodingKeys: String, CodingKey { 
        case createdOn
        case updatedOn
        case tenantId
        case applicationId
        case archived
        case externalId
        case active
        case id
        case name
        case _description = "description"
        case type
        case goal
        case evaluation
        case tags
        case numOfDays
        case assesmentFormId
        case diagnosisFormId
        case goalFormBlueprint
        case evaluationFormBlueprint
        case assessmentFormBlueprint
        case diagnosisFormBlueprint
        case enabled
        case trackable
    }


}


//
// CooeyAPIClient
// ScheduleRequestDTO.swift
//
// Generated by Eldhose Lomy
// https://github.com/eldhoselomy/swagger-codegen
//

import Foundation



public struct ScheduleRequestDTO: Codable {

    public var id: String?
    public var title: String?
    public var _description: String?
    public var startDate: Date?
    public var endDate: Date?
    public var startMinute: Int?
    public var startHour: Int?
    public var endHour: Int?
    public var endMinute: Int?
    public var createdBy: String?
    public var createdOn: Int64?
    public var parentId: String?
    public var recurrence: Recurrence?
    public var scheduleStartDate: String?
    public var scheduleEndDate: String?
    public var fullDayEvent: Bool?
    public var recurring: Bool?

    public init() {
    }

    public init(id: String?, title: String?, _description: String?, startDate: Date, endDate: Date?, startMinute: Int?, startHour: Int?, endHour: Int?, endMinute: Int?, createdBy: String?, createdOn: Int64?, parentId: String?, recurrence: Recurrence?, scheduleStartDate: String?, scheduleEndDate: String?, fullDayEvent: Bool?, recurring: Bool?) {
        self.id = id
        self.title = title
        self._description = _description
        self.startDate = startDate
        self.endDate = endDate
        self.startMinute = startMinute
        self.startHour = startHour
        self.endHour = endHour
        self.endMinute = endMinute
        self.createdBy = createdBy
        self.createdOn = createdOn
        self.parentId = parentId
        self.recurrence = recurrence
        self.scheduleStartDate = scheduleStartDate
        self.scheduleEndDate = scheduleEndDate
        self.fullDayEvent = fullDayEvent
        self.recurring = recurring
    }

    public enum CodingKeys: String, CodingKey { 
        case id
        case title
        case _description = "description"
        case startDate
        case endDate
        case startMinute
        case startHour
        case endHour
        case endMinute
        case createdBy
        case createdOn
        case parentId
        case recurrence
        case scheduleStartDate
        case scheduleEndDate
        case fullDayEvent
        case recurring
    }


}


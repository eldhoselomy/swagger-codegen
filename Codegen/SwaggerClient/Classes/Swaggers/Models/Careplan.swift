//
// CooeyAPIClient
// Careplan.swift
//
// Generated by Eldhose Lomy
// https://github.com/eldhoselomy/swagger-codegen
//

import Foundation



public struct Careplan: Codable {

    public enum ModelType: String, Codable { 
        case remotePatientMonitoring = "REMOTE_PATIENT_MONITORING"
        case chronicCareManagement = "CHRONIC_CARE_MANAGEMENT"
        case _default = "DEFAULT"
    }
    public enum CareplanStatus: String, Codable { 
        case completed = "COMPLETED"
        case suspended = "SUSPENDED"
        case paused = "PAUSED"
        case inProgress = "IN_PROGRESS"
        case pendingStart = "PENDING_START"
    }
    public var createdOn: Int64?
    public var updatedOn: Int64?
    public var tenantId: String?
    public var applicationId: String?
    public var archived: Bool?
    public var externalId: String?
    public var active: Bool?
    public var id: String?
    public var assessment: Assessment?
    public var diagnosis: Diagnosis?
    public var history: String?
    public var assessmentForm: Form?
    public var diagnosisForm: Form?
    public var historyForm: Form?
    public var goalForm: Form?
    public var evaluationForm: Form?
    public var assignerId: String?
    public var assignedOn: Int64?
    public var patientId: String?
    public var levelOfAssistance: String?
    public var beginTime: Int64?
    public var endTime: Int64?
    public var startDate: Date?
    public var endDate: Date?
    public var episodeId: String?
    public var assignerName: String?
    public var userMedicines: [UserMedicine]?
    public var noteId: String?
    public var name: String?
    public var _description: String?
    public var type: ModelType?
    public var careplanStatus: CareplanStatus?
    public var careplanBluprintId: String?
    public var goal: String?
    public var evaluation: String?
    public var tags: [String]?
    public var numOfDays: Int?
    public var enabled: Bool?
    public var trackable: Bool?

    public init() {
    }

    public init(createdOn: Int64?, updatedOn: Int64?, tenantId: String?, applicationId: String?, archived: Bool?, externalId: String?, active: Bool?, id: String?, assessment: Assessment?, diagnosis: Diagnosis?, history: String?, assessmentForm: Form?, diagnosisForm: Form?, historyForm: Form?, goalForm: Form?, evaluationForm: Form?, assignerId: String?, assignedOn: Int64?, patientId: String?, levelOfAssistance: String?, beginTime: Int64?, endTime: Int64?, startDate: Date?, endDate: Date?, episodeId: String?, assignerName: String?, userMedicines: [UserMedicine]?, noteId: String?, name: String?, _description: String?, type: ModelType?, careplanStatus: CareplanStatus?, careplanBluprintId: String?, goal: String?, evaluation: String?, tags: [String]?, numOfDays: Int?, enabled: Bool?, trackable: Bool?) {
        self.createdOn = createdOn
        self.updatedOn = updatedOn
        self.tenantId = tenantId
        self.applicationId = applicationId
        self.archived = archived
        self.externalId = externalId
        self.active = active
        self.id = id
        self.assessment = assessment
        self.diagnosis = diagnosis
        self.history = history
        self.assessmentForm = assessmentForm
        self.diagnosisForm = diagnosisForm
        self.historyForm = historyForm
        self.goalForm = goalForm
        self.evaluationForm = evaluationForm
        self.assignerId = assignerId
        self.assignedOn = assignedOn
        self.patientId = patientId
        self.levelOfAssistance = levelOfAssistance
        self.beginTime = beginTime
        self.endTime = endTime
        self.startDate = startDate
        self.endDate = endDate
        self.episodeId = episodeId
        self.assignerName = assignerName
        self.userMedicines = userMedicines
        self.noteId = noteId
        self.name = name
        self._description = _description
        self.type = type
        self.careplanStatus = careplanStatus
        self.careplanBluprintId = careplanBluprintId
        self.goal = goal
        self.evaluation = evaluation
        self.tags = tags
        self.numOfDays = numOfDays
        self.enabled = enabled
        self.trackable = trackable
    }

    public enum CodingKeys: String, CodingKey { 
        case createdOn
        case updatedOn
        case tenantId
        case applicationId
        case archived
        case externalId
        case active
        case id
        case assessment
        case diagnosis
        case history
        case assessmentForm
        case diagnosisForm
        case historyForm
        case goalForm
        case evaluationForm
        case assignerId
        case assignedOn
        case patientId
        case levelOfAssistance
        case beginTime
        case endTime
        case startDate
        case endDate
        case episodeId
        case assignerName
        case userMedicines
        case noteId
        case name
        case _description = "description"
        case type
        case careplanStatus
        case careplanBluprintId
        case goal
        case evaluation
        case tags
        case numOfDays
        case enabled
        case trackable
    }


}

